INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('AVE-VAR-DEPTH','Ave-Var-Depth','Average depth (nesting level) of an elementary variable)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('AVE-VAR-SIZE','Ave-Var-Size','Average in-memory size of an elementary variable)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('CALL-STMT-NB','CALL-Stmt-Nb','Total number of inter-program control-flow statements (CALL, GOBACK, STOP RUN, EXECUTE, etc.)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('COMPUTE-STMT-NB','COMPUTE-Stmt-Nb','Total number of arithmetic statements (COMPUTE, ADD, etc.)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('DATA-STMT-NB','DATA-Stmt-Nb','Total number of data-manipulation statements (INITIALIZE, INSPECT, SEARCH, etc.)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('ELEM-VAR-NB','Elem-Var-Nb','Total number of elementary (non-group) variables');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('FLOW-STMT-NB','FLOW-Stmt-Nb','Total number of intra-program control-flow statements (IF, GO TO, EVALUATE, PERFORM, etc.)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('IO-STMT-NB','IO-Stmt-Nb','Total number of I/O statements (ACCEPT, READ, SEND, SORT, etc.)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('MAX-VAR-DEPTH','Max-Var-Depth','Maximal depth (nesting level) of any elementary variable');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('MAX-VAR-SIZE','Max-Var-Size','Maximal in-memory size of any elementary variable');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('MISC-STMT-NB','MISC-Stmt-Nb','Total number of miscellaneous statements');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('MOVE-STMT-NB','MOVE-Stmt-Nb','Total number of MOVE and SET statements');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('PROCEDURE-LOC','Procedure-LOC','Total number of lines in the Procedure Division');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('PROCEDURE-PARAPGRAPHS','Procedure-Paragraphs','Total number of paragraphs');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('TOTAL-CONST-NB','Total-Const-Nb','Total number of litteral constants in the program)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('TOTAL-LOC','Total-LOC','Total number of lines in the source file)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('TOTAL-STMT-NB','Total-Stmt-Nb','Total number of statements)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('TOTAL-VAR-NB','Total-Var-Nb','Total number of declared variables)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('COMPONENT-XREF-STATUS','Component-Xref-Status','Statut dans le patrimoine : CORRECT, UNUSED, MISSING');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('AMBIGUOUS-DATA-NAME','AMBIGUOUS-DATA-NAME','Identifies variables that are ambiguous and can refer to more than one data element.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('AMBIGUOUS-PROC-NAME','AMBIGUOUS-PROC-NAME','Identifies references to paragraph or section names that have multiple declarations.  If it is a paragraph name, the multiple declarations occur in the same section (pargraphs with the same name in different sections are legal in COBOL and do not give ris');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('ANOMALY-STATUS','ANOMALY-STATUS','Niveau d anomalie maximal relevé en analysant le composant (OK, notice, warning, error, fatal)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('DATA-DESCRIPTOR-PICTURE-NONLEAF','DATA-DESCRIPTOR-PICTURE-NONLEAF','Identifies data description entries that have both picture clauses and subentries.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('DATA-DESCRIPTOR-UNNAMED','DATA-DESCRIPTOR-UNNAMED','Identifies data elements with neither children nor picture clauses.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('MISORDERD-RENAME','MISORDERD-RENAME','Identifies inconsistent RENAME clause for data element.  All RENAME entries referring to data items within a given logical record must immediately follow the last data description entry of that record.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('NAME-CONFLICT','NAME-CONFLICT','Identifies declaration of multiple data elements with the same name.  A conflict is detected only if both declarations are at the 01 level, or are at the same level below another data element.  Note: COBOL compilers frequently accept source containing suc');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('NOT-UNDERSTOOD-ALTER-STATEMENT','NOT-UNDERSTOOD-ALTER-STATEMENT','Dynamic effects of alter statement on control flow are not analyzed.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('PARSE-ERROR','PARSE-ERROR','Identifies syntax errors detected while parsing.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('PARSE-REPAIR','PARSE-REPAIR','When syntax errors occur, Phœnix must recover from the errors in order analyze the rest of the source file(s).  It does this by removing text surrounding the syntax error until it has altered the text into a form that can be parsed.   This metric identifi');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('UNKNOWN-DATA-NAME','UNKNOWN-DATA-NAME','Identifies references to undeclared data elements.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('UNKNOWN-PROC-NAME','UNKNOWN-PROC-NAME','Identifies references to undefined paragraph or section names.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('BACKWARD-GOTO','BACKWARD-GOTO','Identifies GOTO statements where the target paragraph occurs in the source code before the GOTO statement.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('CONDITION-NOT-USED','CONDITION-NOT-USED','Identifies declared condition names (level 88 description entries) in the main program file that aren t used by any statement in the procedure division.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('COPIED-CONDITION-NOT-USED','COPIED-CONDITION-NOT-USED','Identifies declared condition names (level 88 description entries) in copy files that aren t used by any statement in the procedure division.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('COPYLIB-INITIALIZED-LINKAGE-VAR','COPYLIB-INITIALIZED-LINKAGE-VAR','Identifies data elements in the linkage section, declared in a copy file, having a value clause.  Such values are ignored since they are explicitly set when the program is called.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('COPYLIB-VARIABLE-SET-NOT-USED','COPYLIB-VARIABLE-SET-NOT-USED','Identifies data elements in copy files that are set by statements in the procedure division, but whose values are not used.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('COPYLIB-VARIABLE-UNUSED','COPYLIB-VARIABLE-UNUSED','Identifies data elements in copy files that aren t initialized, and aren t set or used by any statement in the procedure division.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('EMPTY-PARAGRAPH','EMPTY-PARAGRAPH','Identifies procedure paragraphs that contain no statements.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('EMPTY-SECTION','EMPTY-SECTION','Identifies procedure sections that contain no paragraphs.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('GOTO-INTO-PERFORM','GOTO-INTO-PERFORM','Identifies jumps to paragraphs in a perform range.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('GOTO-OUT-OF-PERFORM','GOTO-OUT-OF-PERFORM','Identifies jumps that cause control to exit a perform range in such a way that control doesn t return to the perform range.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('INITIALIZED-LINKAGE-VAR','INITIALIZED-LINKAGE-VAR','Identifies data elements in the linkage section, declared in the main program file, having a value clause.  Such values are ignored since they are explicitly set when the program is called.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LITERAL-IN-PROC-DIV','LITERAL-IN-PROC-DIV','Identifies use of literals in the procedure division (rather than symbolic constants defined in the environment or data division).');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('OVERLAPPING-PERFORM-RANGES','OVERLAPPING-PERFORM-RANGES','Identifies sets of perform ranges that contain a common group of paragraphs, where each perform range in the set contains paragraphs that are not in the other perform ranges.  For example, perform ranges PP-1 thru PP-2 and PP-2 thru PP-3 overlap on paragraph PP-2.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('PARAGRAPH-FALLS-THROUGH','PARAGRAPH-FALLS-THROUGH','Identifies paragraphs from which control can fall through into the succeeding paragraph.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('PARAGRAPH-GOTO','PARAGRAPH-GOTO','Identifies GOTO statements where the target paragraph occurs in the source code after the GOTO statement.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('PERFORM-RANGE-CROSSES-SECTIONS','PERFORM-RANGE-CROSSES-SECTIONS','Identifies perform range specifications where the first and last procedures are in different sections.  Exception: performed ranges specified only with section names are not identified.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('PERFORM-RANGE-HAS-MULTIPLE-ALIASES','PERFORM-RANGE-HAS-MULTIPLE-ALIASES','Identifies inconsistent use of aliases for perform ranges.  The first procedure of a perform range specification can be either a section name or a paragraph name.  A section name is an alias for the first paragraph in that section. Similarly, the last pro');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('PERFORM-RANGE-ORDERING','PERFORM-RANGE-ORDERING','Identifies perform range specifications in which the first procedure occurs in the source code after the last procedure.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('UNREACHABLE-PARAGRAPH','UNREACHABLE-PARAGRAPH','Identifies paragraphs that are unreachable by any control flow path starting at a program entry point.  The control flow analysis excludes possible effects of ALTERs.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('UNUSED-FILE','UNUSED-FILE','Identifies files declared in the program that are never opened, read from, or written to.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('VARIABLE-SET-NOT-USED','VARIABLE-SET-NOT-USED','Identifies data elements declared in the main program file that are set by statements in the procedure division, but whose values are not used.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('VARIABLE-UNUSED','VARIABLE-UNUSED','Identifies data elements declared in the main program file that aren t initialized, and aren t set or used by any statement in the procedure division.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('ALTER-STATEMENT','ALTER-STATEMENT','Identifies usage of ALTER statements within the program.  ALTER statements are flagged since they are an obsolete element in Standard COBOL and was deleted in the 2000 revision of Standard COBOL.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('DECLARED-IDENTIFIER-TOO-LONG','DECLARED-IDENTIFIER-TOO-LONG','Identifies identifiers that exceeds the ANSI standard of 30 characters.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('NESTED-COPYFILES','NESTED-COPYFILES','Identifies when copy files contains COPY directives.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('NUMERIC-VAR-TOO-BIG','Numeric-Var-Too-Big','Numeric variable has more than 18 digits.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('PROGRAM-CONTAINS-EXECUTE-STATEMENTS','PROGRAM-CONTAINS-EXECUTE-STATEMENTS','Identifies usage of EXEC statements within the program.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('TABS-PRESENT','TABS-PRESENT','Identifies when source file(s) contains tab characters.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('ALPHANUMERIC-TO-NUMERIC','ALPHANUMERIC-TO-NUMERIC','Identifies operations that move data from a data element with a picture clause specifying alphanumeric data, to a data element with a picture clause specifying numeric data.  A picture clause specifies numeric data by not containing "A" or "X".  A picture');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('ALPHANUMIC-TO-ALPHA','ALPHANUMIC-TO-ALPHA','Identifies operations that move data from a data element with a picture clause specifying alphanumeric data, to a data element with a picture clause specifying alphabetic data.  A picture clause specifies alphabetic data by containing "A".  A picture clau');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('ALPHA-TO-NUMERIC','ALPHA-TO-NUMERIC','Identifies operations that move data from a data element with a picture clause specifying alphabetic data, to a data element with a picture clause specifying numeric data.  A picture clause specifies alphabetic data by containing "A".  A picture clause sp');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('COPYLIB-VARIABLE-USED-NOT-SET','COPYLIB-VARIABLE-USED-NOT-SET','Identifies when a data element is declared in a copy file, is used in the program, but isn t set or initialized.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LOWER-PRECISION','LOWER-PRECISION','Identifies operations that move data from one data element to another data element where the number of bytes specified by the picture clause of the first data element is larger than the number of bytes specified by the picture clause of the second data el');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('NUMERIC-TO-ALPHA','NUMERIC-TO-ALPHA','Identifies operations that move data from a data element with a picture clause specifying numeric data, to a data element with a picture clause specifying alphabetic data.  A picture clause specifies alphabetic data by containing" "A".  A picture clause s');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('SIGNED-TO-UNSIGNED','SIGNED-TO-UNSIGNED','Identifies operations that move data from a data element with a sign specification in its picture clause, to a data element without a sign specification in its picture clause.  A sign is specified in a picture clause using "S", "+", "-", "CR", or "DB".');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('UNCLOSED-FILE','UNCLOSED-FILE','Identifies files that are opened using the OPEN statement, but are not closed using the CLOSE statement.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('VARIABLE-USED-NOT-SET','VARIABLE-USED-NOT-SET','Identifies when a data element is declared in the main program file, is used in the program, but isn t set or initialized.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('BAD-DECIMAL-POINT','Bad-Decimal-Point','Decimal-point in real literal does not match DECIMAL POINT clause.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('BA-SWITCHES-COMMENT-SPECIAL-NAMES','Ba-Switches-Comment-Special-Names','Identifie les déclarations de SWITCH dans les SPECIAL NAMES.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-COMPLEX-COMPUTE','Lst-Complex-Compute','Liste les instructions de calcul (COMPUTE et autres) mettant en jeu plus de trois variables différentes. Ces instructions peuvent se comporter différemment sur la cible.)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-COMPLEX-FILE','Lst-Complex-File','Cette règle signale les fichiers logiques (FD ou SD) complexes, c est-à-dire comprenant plus d un 01 et/ou de longueur variable.)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-COPY-REPL-PARTIAL','lst-copy-repl-partial','Identifie les COPY REPLACING partiels.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-DECLARATIVE-USE-STMTS','lst-declarative-use-stmts','Identifie les instructions USE dans les DECLARATIVES. La plupart de ces instructions sont non-standard.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-EMPTY-REDF-PARAGRAPH','lst-empty-refd-paragraph','Paragraphe vide référencé explicitement');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-FILE-ADVANCING-NOT-ADVANCING','Lst-File-Advancing-Not-Advancing','Identifie les fichiers (FD) qui ont à la fois des WRITE avec la clause ADVANCING (code de saut implicite) et des WRITE sans cette clause (code de saut potentiellement explicite). Ce "mélange" est interdit sur certaines plates-formes.)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-FILE-CODE-SET','lst-file-code-set','Clause CODE-SET sur un fichier (FD ou SD) : ASCII, GBCD ou autre');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-FILE-OPS-WITH-LOCK','lst-file-ops-with-lock','Identifie les utilisations de LOCK dans les accès aux fichiers.)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-NUMERIC-VARIABLE-REDEF-BY-NON-NUMERIC','Lst-Numeric-Variable-Redef-By-Non-Numeric','Identifie les variables élémentaires numériques redéfinies par des variables alphanumériques ou groupes, à condition que tant cette variable que sa redéfinition soient explicitement référencées. Ces cas correspondent potentiellement à des zones "découpées)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-NUMERIC-VARIABLE-TEST-NUMERIC','Lst-Numeric-Variable-Test-Numeric','Identifie les tests de [non-]numéricité de variables qui sont numériques élémentaires, alphanumériques élémentaires redéfinies par des numériques, groupes contenant des numériques ou bien groupes redéfinies par des numériques. Ces cas dénotent potentielle)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-NUMERIC-VARIABLE-VS-SPACE-COMPARE','Lst-Numeric-Variable-Vs-Space-Compare','Identifie les comparaisons à SPACE de variables qui sont numériques élémentaires, alphanumériques élémentaires redéfinies par des numériques, groupes contenant des numériques ou bien groupes redéfinies par des numériques. Ces cas dénotent potentiellement )');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-NUMERIC-VARIABLE-VS-SPACE-MOVE','Lst-Numeric-Variable-Vs-Space-Move','Identifie les valorisations à SPACE de variables qui sont numériques élémentaires, alphanumériques élémentaires redéfinies par des numériques, groupes contenant des numériques ou bien groupes redéfinies par des numériques. Ces cas dénotent potentiellement)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-OUT-OF-RANGE-INDEX','lst-out-of-range-index','Identifie les SET d un index à une valeur supérieure à la taille maximale du tableau.)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-REPORT-WRITER','Lst-Report-Writer','Identifie les utilisations du module REPORT WRITER (Section RD).)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-RERUN-CLAUSE','lst-rerun-clause','Identifie les instructions de gestion de reprise RERUN, dont le comportement varie beaucoup d une plate-forme à une autre.)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-REWRITE-FILE-VAR-SIZE','lst-rewrite-file-var-size','Identifie les instructions REWRITE sur des fichiers de taille non fixe.)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-SECOND-KEYS','Lst-Second-Keys','Cette règle liste certains types de clés de fichiers "complexes" : clé secondaire, clé secondaire discontinue et clé non DISPLAY.)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-SET-INDEX-ZERO','Lst-Set-Index-Zero','Identifie les SET d index à zéro, rejetés sur certaines plates-formes.)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-TEST-FILE-STATUS-NON-ZERO','Lst-Test-File-Status-Non-Zero','Identifie les références à des variables qui sont des FILE STATUS d un fichier dans des comparaisons à des constantes non nulles.  En effet, la signification de tel ou tel code d état non nul peut varier d une plate-forme à une autre.)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('LST-TOO-SHORT-SD','Lst-Too-Short-SD','Identifie les instructions SORT dont le fichier de tri (SD) a une taille de record inférieure à celle du fichier d entrée ou celle du fichier de sortie. Sur GCOS8, le compilateur ajuste automatiquement cette taillle, mais sur les autres plates-formes, cela provoque une perte de données.)');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('OCCURS-DEPENDING','Occurs-Depending','Identifie les occurrences de définitions de variables contenant une clause OCCURS ... DEPENDING ON dans une zone partagée et/ou imbriquée dans une autre clause OCCURS ... DEPENDING ON.');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('TR-LABEL','tr-label','Étiquette de paragraphe ayant le même nom qu une variable');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('TR-SECTION-PARAGRAPH-NAME','tr-section-paragraph-name','Étiquette de section ayant le même nom qu un paragraphe');
INSERT INTO CRITERE ( ID_CRIT, LIB_CRIT, DESC_CRIT) VALUES ('QUALITETESTSPHOENIX','Qualité des tests','Rapport sondes à tester / sondes testées');
commit;
