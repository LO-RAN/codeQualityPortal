-- outils
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('outils','lib','CODEINSPECTOR','en','SAP CodeInspector');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('outils','lib','CODEINSPECTOR','fr','SAP CodeInspector');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('outils','desc','CODEINSPECTOR','en','SAP CodeInspector');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('outils','desc','CODEINSPECTOR','fr','SAP CodeInspector');

-- m√©triques
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0022','en','Data change logging switched on for a table with data type APPL1');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0022','es','CL_CI_TEST_DDIC_TABLES_0022');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0022','fr','Data change logging switched on for a table with data type APPL1');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0022','en','Data change logging is switched on for the examined table and it has data type APPL1.<BR/><BR/>Tables with data type APPL1 should be tables with transaction data. Therefore, the content will change frequently and hence create a large log file.<BR/><BR/>The solution depends on the table content. If it is transaction data the data changes should not be logged. If the table content is not transaction data, you should correct the data type correspondingly.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0022','es','CL_CI_TEST_DDIC_TABLES_0022');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0022','fr','Data change logging is switched on for the examined table and it has data type APPL1.<BR/><BR/>Tables with data type APPL1 should be tables with transaction data. Therefore, the content will change frequently and hence create a large log file.<BR/><BR/>The solution depends on the table content. If it is transaction data the data changes should not be logged. If the table content is not transaction data, you should correct the data type correspondingly.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0001','en','Call of System Function');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0001','es','CL_CI_TEST_CRITICAL_STATEMENTS_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0001','fr','Call of System Function');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0001','en','A system function (C CALL) is used. This statement is only intended for internal use.<BR/>
\nIncompatible changes or enhancements are possible any time without warning or note.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0001','es','CL_CI_TEST_CRITICAL_STATEMENTS_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0001','fr','A system function (C CALL) is used. This statement is only intended for internal use.<BR/>
\nIncompatible changes or enhancements are possible any time without warning or note.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0002','en','Call of Transaction');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0002','es','CL_CI_TEST_CRITICAL_STATEMENTS_0002');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0002','fr','Call of Transaction');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0002','en','For CALL TRANSACTION there must already be a suitable transaction authorization with the calling transaction.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0002','es','CL_CI_TEST_CRITICAL_STATEMENTS_0002');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0002','fr','For CALL TRANSACTION there must already be a suitable transaction authorization with the calling transaction.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0003','en','Use of a SYSTEM-CALL');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0003','es','CL_CI_TEST_CRITICAL_STATEMENTS_0003');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0003','fr','Use of a SYSTEM-CALL');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0003','en','This SYSTEM-CALL statement is exclusively for internal use within SAP Technology Development.<BR/>Incompatible changes or developments are possible at any time without prior warning or notes.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0003','es','CL_CI_TEST_CRITICAL_STATEMENTS_0003');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0003','fr','This SYSTEM-CALL statement is exclusively for internal use within SAP Technology Development.<BR/>Incompatible changes or developments are possible at any time without prior warning or notes.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0004','en','Call by editor');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0004','es','CL_CI_TEST_CRITICAL_STATEMENTS_0004');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0004','fr','Call by editor');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0004','en','Call by editor.<BR/>No authorization or system checks are carried out. ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0004','es','CL_CI_TEST_CRITICAL_STATEMENTS_0004');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0004','fr','Call by editor.<BR/>No authorization or system checks are carried out. ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0005','en','Call of executable program');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0005','es','CL_CI_TEST_CRITICAL_STATEMENTS_0005');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0005','fr','Call of executable program');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0005','en','Call of executable program.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0005','es','CL_CI_TEST_CRITICAL_STATEMENTS_0005');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0005','fr','Call of executable program.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0006','en','Use of Native SQL');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0006','es','CL_CI_TEST_CRITICAL_STATEMENTS_0006');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0006','fr','Use of Native SQL');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0006','en','Use of Native SQL.<BR/><BR/>Authorization checks cannot be appropriately run using EXEC SQL and should be carried out at program level.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0006','es','CL_CI_TEST_CRITICAL_STATEMENTS_0006');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0006','fr','Use of Native SQL.<BR/><BR/>Authorization checks cannot be appropriately run using EXEC SQL and should be carried out at program level.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0007','en','Use of ROLLBACK WORK');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0007','es','CL_CI_TEST_CRITICAL_STATEMENTS_0007');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0007','fr','Use of ROLLBACK WORK');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0007','en','ROLLBACK WORK undoes all database changes since the last COMMIT WORK or DB-COMMIT. If used wrongly, the statement can cause inconsistencies within a transaction.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0007','es','CL_CI_TEST_CRITICAL_STATEMENTS_0007');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0007','fr','ROLLBACK WORK undoes all database changes since the last COMMIT WORK or DB-COMMIT. If used wrongly, the statement can cause inconsistencies within a transaction.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0008','en','Use of a database hint');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0008','es','CL_CI_TEST_CRITICAL_STATEMENTS_0008');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0008','fr','Use of a database hint');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0008','en','A database hint contains database-specific code and should only be used in exceptional cases.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0008','es','CL_CI_TEST_CRITICAL_STATEMENTS_0008');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0008','fr','A database hint contains database-specific code and should only be used in exceptional cases.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0021','en','Table has too many fields');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0021','es','CL_CI_TEST_DDIC_TABLES_0021');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0021','fr','Table has too many fields');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0021','en','The examined table has too many fields.<BR/><BR/>The maximum number of fields in a table is limited to 249 (from Release 4.6C: 749). Because a customer may want to add fields to table, sufficient space should be left available for this.<BR/><BR/>The data design should be selected such that no table has more than 200 fields (from Release 4.6C: 700).');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0021','es','CL_CI_TEST_DDIC_TABLES_0021');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0021','fr','The examined table has too many fields.<BR/><BR/>The maximum number of fields in a table is limited to 249 (from Release 4.6C: 749). Because a customer may want to add fields to table, sufficient space should be left available for this.<BR/><BR/>The data design should be selected such that no table has more than 200 fields (from Release 4.6C: 700).');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0009','en','Use of GENERATE REPOR, SUBROUTINE POOL or DYNPRO');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0009','es','CL_CI_TEST_CRITICAL_STATEMENTS_0009');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0009','fr','Use of GENERATE REPOR, SUBROUTINE POOL or DYNPRO');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0009','en','The use of GENERATE REPORT, SUBROUTINE POOL or DYNPRO is exclusively for internal use within SAP Technology Development.<BR/>
\nIncompatible changes or developments are possible at any time without prior warning or notes.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0009','es','CL_CI_TEST_CRITICAL_STATEMENTS_0009');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0009','fr','The use of GENERATE REPORT, SUBROUTINE POOL or DYNPRO is exclusively for internal use within SAP Technology Development.<BR/>
\nIncompatible changes or developments are possible at any time without prior warning or notes.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0010','en','Read a program or textpool');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0010','es','CL_CI_TEST_CRITICAL_STATEMENTS_0010');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0010','fr','Read a program or textpool');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0010','en','Read a program or textpool is intended for internal use within SAP Technology Development only! Incompatible changes or further development can be made at any time without warning.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0010','es','CL_CI_TEST_CRITICAL_STATEMENTS_0010');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0010','fr','Read a program or textpool is intended for internal use within SAP Technology Development only! Incompatible changes or further development can be made at any time without warning.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0011','en','Write or delete a program or textpool');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0011','es','CL_CI_TEST_CRITICAL_STATEMENTS_0011');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0011','fr','Write or delete a program or textpool');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0011','en','Write or delete a program or textpool.<BR/><BR/>This statement is intended for internal use within SAP Technology Development only.<BR/>Incompatible changes or further development can be made at any time without warning! Also, if the statement is used incorrectly, the system status may be manipulated or destroyed.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0011','es','CL_CI_TEST_CRITICAL_STATEMENTS_0011');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0011','fr','Write or delete a program or textpool.<BR/><BR/>This statement is intended for internal use within SAP Technology Development only.<BR/>Incompatible changes or further development can be made at any time without warning! Also, if the statement is used incorrectly, the system status may be manipulated or destroyed.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0012','en','Read a screen');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0012','es','CL_CI_TEST_CRITICAL_STATEMENTS_0012');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0012','fr','Read a screen');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0012','en','The Read screen statement is intended for internal use within SAP Technology Development only. Incompatible changes or further development can be made at any time without warning.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0012','es','CL_CI_TEST_CRITICAL_STATEMENTS_0012');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0012','fr','The Read screen statement is intended for internal use within SAP Technology Development only. Incompatible changes or further development can be made at any time without warning.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0013','en','Write or delete a screen');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0013','es','CL_CI_TEST_CRITICAL_STATEMENTS_0013');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0013','fr','Write or delete a screen');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0013','en','The Write or delete screen statements are intended for internal use within SAP Technology Development only.<BR/>Incompatible changes or further development can be made at any time without warning! Also, if the statement is used incorrectly, the system status may be manipulated or destroyed.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0013','es','CL_CI_TEST_CRITICAL_STATEMENTS_0013');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0013','fr','The Write or delete screen statements are intended for internal use within SAP Technology Development only.<BR/>Incompatible changes or further development can be made at any time without warning! Also, if the statement is used incorrectly, the system status may be manipulated or destroyed.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','compl','CL_CI_TEST_CRITICAL_STATEMENTS_0012','en','CL_CI_TEST_CRITICAL_STATEMENTS_0012');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','compl','CL_CI_TEST_CRITICAL_STATEMENTS_0012','es','CL_CI_TEST_CRITICAL_STATEMENTS_0012');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','compl','CL_CI_TEST_CRITICAL_STATEMENTS_0012','fr','CL_CI_TEST_CRITICAL_STATEMENTS_0012');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0014','en','Read a nametab entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0014','es','CL_CI_TEST_CRITICAL_STATEMENTS_0014');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0014','fr','Read a nametab entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0014','en','The Read nametab entry statement is intended for internal use within SAP Technology Development only.<BR/>Incompatible changes or further development can be made at any time without warning!');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0014','es','CL_CI_TEST_CRITICAL_STATEMENTS_0014');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0014','fr','The Read nametab entry statement is intended for internal use within SAP Technology Development only.<BR/>Incompatible changes or further development can be made at any time without warning!');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0015','en','Write a nametab entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0015','es','CL_CI_TEST_CRITICAL_STATEMENTS_0015');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_CRITICAL_STATEMENTS_0015','fr','Write a nametab entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0015','en','The Write nametab entry statement is intended for internal use within SAP Technology Development only.<BR/>Incompatible changes or further development can be made at any time without warning! Also, if the statement is used incorrectly, the system status may be manipulated or destroyed.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0015','es','CL_CI_TEST_CRITICAL_STATEMENTS_0015');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_CRITICAL_STATEMENTS_0015','fr','The Write nametab entry statement is intended for internal use within SAP Technology Development only.<BR/>Incompatible changes or further development can be made at any time without warning! Also, if the statement is used incorrectly, the system status may be manipulated or destroyed.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_SEC01_0001','en','Dynamic changing table access');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_SEC01_0001','es','CL_CI_TEST_IMUD_TAW_SEC01_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_SEC01_0001','fr','Dynamic changing table access');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_SEC01_0001','en','Dynamic changing (INSERT, UPDATE, MODIFY, DELETE) table access.<BR/><BR/>Check whether the table access is permitted.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_SEC01_0001','es','CL_CI_TEST_IMUD_TAW_SEC01_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_SEC01_0001','fr','Dynamic changing (INSERT, UPDATE, MODIFY, DELETE) table access.<BR/><BR/>Check whether the table access is permitted.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_SEC01_0002','en','Dynamic WHERE Condition for table');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_SEC01_0002','es','CL_CI_TEST_IMUD_TAW_SEC01_0002');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_SEC01_0002','fr','Dynamic WHERE Condition for table');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_SEC01_0002','en','Dynamic WHERE Condition for table.<BR/>Check whether the table access using a dynamic WHERE condition is permitted.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_SEC01_0002','es','CL_CI_TEST_IMUD_TAW_SEC01_0002');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_SEC01_0002','fr','Dynamic WHERE Condition for table.<BR/>Check whether the table access using a dynamic WHERE condition is permitted.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_SEC01_0003','en','Access (INSERT, UPDATE, MODIFY, DELETE) to table');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_SEC01_0003','es','CL_CI_TEST_IMUD_TAW_SEC01_0003');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_SEC01_0003','fr','Access (INSERT, UPDATE, MODIFY, DELETE) to table');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_SEC01_0003','en','Access (INSERT, UPDATE, MODIFY, DELETE) to table.<BR/>Check whether the table access is permitted.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_SEC01_0003','es','CL_CI_TEST_IMUD_TAW_SEC01_0003');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_SEC01_0003','fr','Access (INSERT, UPDATE, MODIFY, DELETE) to table.<BR/>Check whether the table access is permitted.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_SEC01_0004','en','Client-specific changing access (INSERT, UPDATE, MODIFY, DELETE) to table');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_SEC01_0004','es','CL_CI_TEST_IMUD_TAW_SEC01_0004');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_SEC01_0004','fr','Client-specific changing access (INSERT, UPDATE, MODIFY, DELETE) to table');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_SEC01_0004','en','Client-specific changing access (INSERT, UPDATE, MODIFY, DELETE) to table.<BR/>Check whether the client-specific table access is permitted.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_SEC01_0004','es','CL_CI_TEST_IMUD_TAW_SEC01_0004');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_SEC01_0004','fr','Client-specific changing access (INSERT, UPDATE, MODIFY, DELETE) to table.<BR/>Check whether the client-specific table access is permitted.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_NOT_VB_0001','en','INSERT, UPDATE, MODIFY, DELETE in no update module');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_NOT_VB_0001','es','CL_CI_TEST_IMUD_NOT_VB_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_NOT_VB_0001','fr','INSERT, UPDATE, MODIFY, DELETE in no update module');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_NOT_VB_0001','en','INSERT, UPDATE, MODIFY, DELETE in no update module.<BR/>Within a transaction, changing database accesses should be executed in update modules.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_NOT_VB_0001','es','CL_CI_TEST_IMUD_NOT_VB_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_NOT_VB_0001','fr','INSERT, UPDATE, MODIFY, DELETE in no update module.<BR/>Within a transaction, changing database accesses should be executed in update modules.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_SEC01_0000','en','Dynamic and Client-Specific Accesses in SELECT');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_SEC01_0000','es','CL_CI_TEST_SELECT_TAW_SEC01_0000');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_SEC01_0000','fr','Dynamic and Client-Specific Accesses in SELECT');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_SEC01_0000','en','The check examines whether any security-relevant read accesses were made to database tables using SELECT  or  OPEN CURSOR [WITH HOLD] c FOR SELECT ...<BR/>These are:<BR/> - Dynamic table accesses: SELECT * FROM (dbtab) WHERE ...<BR/> - Dynamic WHERE conditions: SELECT * FROM dbtab WHERE (where_cond)<BR/> - Accesses to certain tables: SELECT * FROM dbtab WHERE ...<BR/> - Client-specific accesses: SELECT * FROM dbtab FROM WA ... CLIENT SPECIFIED ...');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_SEC01_0000','es','CL_CI_TEST_SELECT_TAW_SEC01_0000');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_SEC01_0000','fr','The check examines whether any security-relevant read accesses were made to database tables using SELECT  or  OPEN CURSOR [WITH HOLD] c FOR SELECT ...<BR/>These are:<BR/> - Dynamic table accesses: SELECT * FROM (dbtab) WHERE ...<BR/> - Dynamic WHERE conditions: SELECT * FROM dbtab WHERE (where_cond)<BR/> - Accesses to certain tables: SELECT * FROM dbtab WHERE ...<BR/> - Client-specific accesses: SELECT * FROM dbtab FROM WA ... CLIENT SPECIFIED ...');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_THEN_CHECK_0000','en','SELECT Statement with Subsequent CHECK');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_THEN_CHECK_0000','es','CL_CI_TEST_SELECT_THEN_CHECK_0000');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_THEN_CHECK_0000','fr','SELECT Statement with Subsequent CHECK');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_THEN_CHECK_0000','en','Searches for CHECK statements that directly follow a SELECT  statement.<BR/><BR/>All selection conditions should be specified in the WHERE clause.<BR/>Do not select data and then resort it using CHECK.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_THEN_CHECK_0000','es','CL_CI_TEST_SELECT_THEN_CHECK_0000');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_THEN_CHECK_0000','fr','Searches for CHECK statements that directly follow a SELECT  statement.<BR/><BR/>All selection conditions should be specified in the WHERE clause.<BR/>Do not select data and then resort it using CHECK.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_NESTED_0000','en','SELECTs in Loops');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_NESTED_0000','es','CL_CI_TEST_SELECT_NESTED_0000');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_NESTED_0000','fr','SELECTs in Loops');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_NESTED_0000','en','Searches for SELECT  statements that are contained in loops. These loops are:<BR/> - SELECT ... ENDSELECT.<BR/> - LOOP ... ENDLOOP.<BR/> - DO ... ENDDO.<BR/> - WHILE ... ENDWHILE.<BR/> - PROVIDE ... ENDPROVIDE.<BR/><BR/>Returns the use of SELECT in one of the above loop types. The use in modularization units that are called within a loop is not ascertained.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_NESTED_0000','es','CL_CI_TEST_SELECT_NESTED_0000');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_NESTED_0000','fr','Searches for SELECT  statements that are contained in loops. These loops are:<BR/> - SELECT ... ENDSELECT.<BR/> - LOOP ... ENDLOOP.<BR/> - DO ... ENDDO.<BR/> - WHILE ... ENDWHILE.<BR/> - PROVIDE ... ENDPROVIDE.<BR/><BR/>Returns the use of SELECT in one of the above loop types. The use in modularization units that are called within a loop is not ascertained.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SCAN_NESTED_0001','en','Nested Loops');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SCAN_NESTED_0001','es','CL_CI_TEST_SCAN_NESTED_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SCAN_NESTED_0001','fr','Nested Loops');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SCAN_NESTED_0001','en','Searches for loops that are in turn nested within other loops. These are:<BR/> - LOOP ... ENDLOOP.<BR/> - DO ... ENDDO.<BR/> - WHILE ... ENDWHILE.<BR/> - PROVIDE ... ENDPROVIDE.<BR/><BR/>Returns whether two of the above loop types are nested within one another or appear in a SELECT ... ENDSELECT loop. The use in modularization units that are called within a loop is not ascertained.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SCAN_NESTED_0001','es','CL_CI_TEST_SCAN_NESTED_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SCAN_NESTED_0001','fr','Searches for loops that are in turn nested within other loops. These are:<BR/> - LOOP ... ENDLOOP.<BR/> - DO ... ENDDO.<BR/> - WHILE ... ENDWHILE.<BR/> - PROVIDE ... ENDPROVIDE.<BR/><BR/>Returns whether two of the above loop types are nested within one another or appear in a SELECT ... ENDSELECT loop. The use in modularization units that are called within a loop is not ascertained.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0000','fr','Program contains syntax errors');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0001','fr','Program contains generation errors');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0002','fr','Internal Error: Program Contains Scan Errors');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0003','fr','Internal Error: SCAN WITH STRUCTURE Is Inconsistent');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0004','fr','Program contains space characters');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0005','fr','Function Module Already Defined');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0006','fr','Function module definition has no TFDIR entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0008','fr','Program with Invalid Namespace');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0009','fr','Program source text cannot be read');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0017','fr','Externally referenced object will not be transported');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0019','fr','Program contains inconsistent timestamps');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0021','fr','Program package has no TDEVC entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0023','fr','Program has no Object Directory entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0024','fr','Duplicated Call from SET EXTENDED CHECK OFF');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0025','fr','Call from SET EXTENDED CHECK ON is missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0033','fr','Program contains inactive program INCLUDES');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0036','fr','Externally referenced program contains syntax errors');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0037','fr','Externally referenced program has no TRDIR entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0038','fr','Cannot read externally referenced program');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0039','fr','No Valid Test Program (No TRDIR Entry or INCLUDE)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0040','fr','Cannot change program in current system');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0041','fr','Object has not been assigned to an application package');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0042','fr','Program uses object from an invalid package (error)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0043','fr','Program uses object from an invalid package (warning)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0044','fr','Program uses object from an invalid package (info)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0100','fr','There is no subroutine for this PERFORM call');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0101','fr','Wrong Number of Parameters for This PERFORM Call');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0102','fr','Undefined TABLES Parameter for This PERFORM Call');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0103','fr','Formal Parameter Incompatible with Actual Parameter');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0104','fr','External PERFORM in an INCLUDE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0105','fr','STRUCTURE Parameter');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0106','fr','Literal Incompatible with Formal Parameter');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0119','fr','Argument categories are not suitable (USING/CHANGING)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0121','fr','System will not call subroutine');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0134','fr','System will not call FORM (FORM in multiple use)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0135','fr','Missing Formal Paramter Type');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0200','fr','CASE Statement with Identical WHEN Conditions');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0201','fr','LOOP with WHERE/TO condition contains an AT (Warning)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0202','fr','The TO limit in the LOOP is overwritten in the rump');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0203','fr','Name begins with a reserved prefix %_');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0204','fr','FREE MEMORY Statement Without ID Entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0205','fr','INCLUDE Program Is Not Type I');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0206','fr','The first statement after CASE is not WHEN');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0208','fr','Statement in DATA Declaration');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0209','fr','STOP Statement in MODUL Definition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0211','fr','SY field will be overwritten');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0212','fr','Predefined field (%_) will be overwritten');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0213','fr','Declaration in Event');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0214','fr','Text Literal Unnecessarily Converted to Integer');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0215','fr','Redundant Assignment');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0216','fr','Duplicate Event Definition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0217','fr','RAISE Statement Outside Function Group');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0218','fr','EXPORTING Parameter Is Not Called');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0219','fr','STOP Statement in Function Module');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0220','fr','MODULE Statement in FORM POOL');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0230','fr','LINE-SIZE Entered Longer Than 132');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0232','fr','ASSIGN Beyond Field Boundary');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0233','fr','Declaration in Module (Offset Without Length Specification)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0234','fr','You can replace WRITE TO with MOVE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0235','fr','LOOP with FROM condition contains an AT (info)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0300','fr','Authorization Field Missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0301','fr','Authorization Object not Entered in the Table TOBJ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0302','fr','Wrong Number of Authorization Fields');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0303','fr','Authorizations: Fixed Vals for Domns Falsely Entered for ID');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0304','fr','Authorizations: Field Length Too Long');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0401','fr','GET/SET Parameters: Field Length Too Long');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0402','fr','GET/SET-Parameter Not Entered in TPARA');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0600','fr','T100 MESSAGE Not Defined');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0601','fr','MESSAGE call contains the wrong number of WITH parameters');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0602','fr','Long Text Missing for MESSAGE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0603','fr','Long Text for MESSAGE not Activated');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0604','fr','Active long text for MESSAGE is obsolete');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0700','fr','GUI Status Not Defined');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0701','fr','TITLE not Defined');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0702','fr','STATUS Definition in Formpool');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0703','fr','SET TITLE Call in Formpool');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0704','fr','Dynamic Specification of GUI Status');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0800','fr','BREAK-POINT Statement');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0801','fr','Obsolete Statement SYNTAX-TRACE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0802','fr','User-Specific Control Flow (usin SY-UNAME)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0803','fr','Statement for Time Measurement');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0804','fr','Statement for Time Measurement of SCONT Commands');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0805','fr','Statement consists of one point');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0806','fr','Statement after EXIT/STOP/RETURN/RAISE/SUBMIT cannot be reached');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0807','fr','Pseudo-comment with no effect');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0901','fr','Undefined Search Help');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0903','fr','Initial Value Too Long for Field Type');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0905','fr','Field Name with Hyphen');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0906','fr','Unused Fields');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0908','fr','Unread Fields');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0910','fr','Unused Fields (INCLUDE Is Shared)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0911','fr','Unread Fields (INCLUDE Is Shared)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0912','fr','Field Name Identical to Predefined Type but Different Type');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0913','fr','Field Name Identical to Operator Name');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1000','fr','Function Module Called Has no TFDIR Entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1001','fr','Function Module Parameter Missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1002','fr','Function Module Parameter Missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1004','fr','The called function module is obsolete');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1006','fr','Access to Undefined Return Code After CALL FUNCTION');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1007','fr','Return codes of function module exceptions are ignored');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1011','fr','EXCEPTION for RAISE Statement Missing in Function Module');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1012','fr','No RAISE Statement in Function Group for EXCEPTION in FM');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1200','fr','ASCII/EBCDIC Problem (Comparison with Characters)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1201','fr','Potential ASCII/EBCDIC Problem with Untyped Parameter');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1300','fr','Warning of Syntax Check with Very High Change Priority');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1301','fr','Warning of Syntax Check with High Change Priority');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1302','fr','Warning of Syntax Check with Medium Change Priority');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1303','fr','Warning with Medium Priority');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1304','fr','Warning with Medium Priority (Cannot Be Commented Out)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1305','fr','Warning with Low Priority (Can Be Commented Out)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1306','fr','Structural Enhancement by Customer (Very Serious Problem)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1307','fr','Structural Enhancement by Customer (Very Serious Problem)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1308','fr','Structural Enhancement by Customer (Medium-Priority Problem)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1309','fr','Structure Enhancements by Customers (Warning)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1311','fr','Warning with High Change Priority (Export/Import)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1400','fr','Display of CURR Field Without CURRENCY Addition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1401','fr','Display of a UNIT Field Without a UNIT Addition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1402','fr','Display of UNIT Field Without UNIT Addition with DECIMALS');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1500','fr','COMMON PART definition is different');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1601','fr','Screen Errors;DY_NEXT_DYNPRO     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1602','fr','Screen Errors;DY_MISSING_MODUL   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1603','fr','Screen Errors;DY_MISSING_FIELD   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1604','fr','Screen Errors;DY_MISS_SCREEN     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1605','fr','Screen Errors;DY_MISS_DYNPRO     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1607','fr','Screen Errors;DY_UNUSED_MODUL    ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1608','fr','Screen Errors;DY_MISS_ATTR       ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1609','fr','Screen Errors;DY_MISS_DOMAIN1    ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1610','fr','Screen Errors;DY_MISS_DOMAIN2    ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1611','fr','Screen Errors;DY_FIELD_LIST1     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1612','fr','Screen Errors;DY_FIELD_LIST2     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1613','fr','Screen Errors;DY_ISOLATED        ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1614','fr','Screen Errors;DY_NOREF           ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1615','fr','Screen Errors;DY_NOREF_DEF       ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1616','fr','Screen Errors;DY_MISS_TAB_CONT1  ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1617','fr','Screen Errors;DY_MISS_TAB_CONT2  ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1618','fr','Screen Errors;DY_UNUSED_TAB_CONT ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1619','fr','Screen Errors;DY_UNUSED_DYNPRO   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1620','fr','Screen Errors;DY_SYNTAX_ERROR_1  ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1621','fr','Screen Errors;DY_EL_DDIC_REF     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1622','fr','Screen Errors;DY_EL_TEXT         ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1623','fr','Screen Errors;DY_EL_TYPE_WRONG   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1624','fr','Screen Errors;DY_EL_TEXT_LEN     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1625','fr','Screen Errors;DY_EL_MANAGE_LEN   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1626','fr','Screen Errors;DY_EL_COLLISION    ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1627','fr','Screen Errors;DY_EL_CONTEXT      ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1628','fr','Screen Errors;DY_SEL_MISSING     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1695','fr','Screen Errors;DY_MISS_DYNPRO_PROG');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1696','fr','Screen Errors;DY_SYNTAX_ERROR_2  ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1699','fr','Screen Errors;DY_INTERNAL        ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1700','fr','Text Element Missing in a Character String');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1701','fr','Text Element not Defined in Text Pool');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1702','fr','Character String in Source Code Contains Invalid Characters');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1703','fr','Text element ends with an umlaut');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1704','fr','Different strings have the same text element ID');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1705','fr','Text Element Defined Differently in Text Pool and Program');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1706','fr','Text element will not be used');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1707','fr','Text Element in Shared Include');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1708','fr','Superfluous Selection Text');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1709','fr','Selection text has not been maintainged');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1710','fr','Text Pool Inconsistent');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1800','fr','Transaction Code not Entered in TSTC');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1801','fr','SUBMIT Parameter Does Not Exist');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1802','fr','SELECT-OPTION Missing for SUBMIT Parameters');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1803','fr','Dialog module is not entered in the TDCT');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1804','fr','Report called using SUBMIT is not Type 1');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1805','fr','User Exit Enhancement Missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1806','fr','Function Module with Interface Missing in Func. Group (X..)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1807','fr','Function Module not Deactivated Using TMOD/SMOD');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1900','fr','Potential Generation Bottleneck: Load Table More Than 98% Full');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1901','fr','Potential Generation Bottleneck: Load Table More Than 90% Full');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_2000','fr','Error Using Variable with Language Identifer in TRANSLATE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_2003','fr','Error Using Variable without Language Identifer in TRANSLATE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_3100','fr','SELECT Loop contains statement that destroys cursor');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_3101','fr','SELECT loop contains PERFORM call (cursor may be lost)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_3200','fr','Index Access to Internal Table Outside a Loop');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_3201','fr','Index Access to Internal Table Outside a Loop (in FORM)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_9999','fr','Internal Tool Error: ASSERT Condition Violated');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0000','fr','Program contains syntax errors');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0001','fr','Program contains generation errors');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0002','fr','Internal Error: Program Contains Scan Errors');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0003','fr','Internal Error: SCAN WITH STRUCTURE Is Inconsistent');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0004','fr','Program contains space characters');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0005','fr','Function Module Already Defined');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0006','fr','Function module definition has no TFDIR entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0008','fr','Program with Invalid Namespace');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0009','fr','Program source text cannot be read');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0017','fr','Externally referenced object will not be transported');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0019','fr','Program contains inconsistent timestamps');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0021','fr','Program package has no TDEVC entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0023','fr','Program has no Object Directory entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0024','fr','Duplicated Call from SET EXTENDED CHECK OFF');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0025','fr','Call from SET EXTENDED CHECK ON is missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0033','fr','Program contains inactive program INCLUDES');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0036','fr','Externally referenced program contains syntax errors');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0037','fr','Externally referenced program has no TRDIR entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0038','fr','Cannot read externally referenced program');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0039','fr','No Valid Test Program (No TRDIR Entry or INCLUDE)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0040','fr','Cannot change program in current system');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0041','fr','Object has not been assigned to an application package');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0042','fr','Program uses object from an invalid package (error)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0043','fr','Program uses object from an invalid package (warning)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0044','fr','Program uses object from an invalid package (info)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0100','fr','There is no subroutine for this PERFORM call');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0101','fr','Wrong Number of Parameters for This PERFORM Call');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0102','fr','Undefined TABLES Parameter for This PERFORM Call');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0103','fr','Formal Parameter Incompatible with Actual Parameter');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0104','fr','External PERFORM in an INCLUDE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0105','fr','STRUCTURE Parameter');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0106','fr','Literal Incompatible with Formal Parameter');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0119','fr','Argument categories are not suitable (USING/CHANGING)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0121','fr','System will not call subroutine');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0134','fr','System will not call FORM (FORM in multiple use)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0135','fr','Missing Formal Paramter Type');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0200','fr','CASE Statement with Identical WHEN Conditions');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0201','fr','LOOP with WHERE/TO condition contains an AT (Warning)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0202','fr','The TO limit in the LOOP is overwritten in the rump');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0203','fr','Name begins with a reserved prefix %_');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0204','fr','FREE MEMORY Statement Without ID Entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0205','fr','INCLUDE Program Is Not Type I');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0206','fr','The first statement after CASE is not WHEN');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0208','fr','Statement in DATA Declaration');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0209','fr','STOP Statement in MODUL Definition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0211','fr','SY field will be overwritten');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0212','fr','Predefined field (%_) will be overwritten');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0213','fr','Declaration in Event');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0214','fr','Text Literal Unnecessarily Converted to Integer');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0215','fr','Redundant Assignment');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0216','fr','Duplicate Event Definition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0217','fr','RAISE Statement Outside Function Group');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0218','fr','EXPORTING Parameter Is Not Called');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0219','fr','STOP Statement in Function Module');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0220','fr','MODULE Statement in FORM POOL');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0230','fr','LINE-SIZE Entered Longer Than 132');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0232','fr','ASSIGN Beyond Field Boundary');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0233','fr','Declaration in Module (Offset Without Length Specification)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0234','fr','You can replace WRITE TO with MOVE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0235','fr','LOOP with FROM condition contains an AT (info)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0300','fr','Authorization Field Missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0301','fr','Authorization Object not Entered in the Table TOBJ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0302','fr','Wrong Number of Authorization Fields');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0303','fr','Authorizations: Fixed Vals for Domns Falsely Entered for ID');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0304','fr','Authorizations: Field Length Too Long');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0401','fr','GET/SET Parameters: Field Length Too Long');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0402','fr','GET/SET-Parameter Not Entered in TPARA');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0600','fr','T100 MESSAGE Not Defined');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0601','fr','MESSAGE call contains the wrong number of WITH parameters');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0602','fr','Long Text Missing for MESSAGE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0603','fr','Long Text for MESSAGE not Activated');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0604','fr','Active long text for MESSAGE is obsolete');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0700','fr','GUI Status Not Defined');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0701','fr','TITLE not Defined');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0702','fr','STATUS Definition in Formpool');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0703','fr','SET TITLE Call in Formpool');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0704','fr','Dynamic Specification of GUI Status');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0800','fr','BREAK-POINT Statement');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0801','fr','Obsolete Statement SYNTAX-TRACE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0802','fr','User-Specific Control Flow (usin SY-UNAME)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0803','fr','Statement for Time Measurement');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0804','fr','Statement for Time Measurement of SCONT Commands');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0805','fr','Statement consists of one point');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0806','fr','Statement after EXIT/STOP/RETURN/RAISE/SUBMIT cannot be reached');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0807','fr','Pseudo-comment with no effect');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0901','fr','Undefined Search Help');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0903','fr','Initial Value Too Long for Field Type');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0905','fr','Field Name with Hyphen');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0906','fr','Unused Fields');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0908','fr','Unread Fields');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0910','fr','Unused Fields (INCLUDE Is Shared)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0911','fr','Unread Fields (INCLUDE Is Shared)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0912','fr','Field Name Identical to Predefined Type but Different Type');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0913','fr','Field Name Identical to Operator Name');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1000','fr','Function Module Called Has no TFDIR Entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1001','fr','Function Module Parameter Missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1002','fr','Function Module Parameter Missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1004','fr','The called function module is obsolete');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1006','fr','Access to Undefined Return Code After CALL FUNCTION');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1007','fr','Return codes of function module exceptions are ignored');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1011','fr','EXCEPTION for RAISE Statement Missing in Function Module');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1012','fr','No RAISE Statement in Function Group for EXCEPTION in FM');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1200','fr','ASCII/EBCDIC Problem (Comparison with Characters)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1201','fr','Potential ASCII/EBCDIC Problem with Untyped Parameter');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1300','fr','Warning of Syntax Check with Very High Change Priority');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1301','fr','Warning of Syntax Check with High Change Priority');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1302','fr','Warning of Syntax Check with Medium Change Priority');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1303','fr','Warning with Medium Priority');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1304','fr','Warning with Medium Priority (Cannot Be Commented Out)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1305','fr','Warning with Low Priority (Can Be Commented Out)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1306','fr','Structural Enhancement by Customer (Very Serious Problem)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1307','fr','Structural Enhancement by Customer (Very Serious Problem)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1308','fr','Structural Enhancement by Customer (Medium-Priority Problem)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1309','fr','Structure Enhancements by Customers (Warning)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1311','fr','Warning with High Change Priority (Export/Import)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1400','fr','Display of CURR Field Without CURRENCY Addition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1401','fr','Display of a UNIT Field Without a UNIT Addition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1402','fr','Display of UNIT Field Without UNIT Addition with DECIMALS');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1500','fr','COMMON PART definition is different');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1601','fr','Screen Errors');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','compl','CL_CI_TEST_SELECT_TAW_A_0001','en','The message priority depends on the size category of the table.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','compl','CL_CI_TEST_SELECT_TAW_A_0001','fr','The message priority depends on the size category of the table.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_A_0001','en','SELECT statement without WHERE condition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_A_0001','es','CL_CI_TEST_SELECT_TAW_A_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_A_0001','fr','SELECT statement without WHERE condition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_A_0001','en','A SELECT statement without WHERE condition reads the whole table.<BR/>Check whether you can limit the data selection using a suitable WHERE condition.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_A_0001','es','CL_CI_TEST_SELECT_TAW_A_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_A_0001','fr','A SELECT statement without WHERE condition reads the whole table.<BR/>Check whether you can limit the data selection using a suitable WHERE condition.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_A_0002','en','No field of a table index in WHERE condition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_A_0002','es','CL_CI_TEST_SELECT_TAW_A_0002');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_A_0002','fr','No field of a table index in WHERE condition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_A_0002','en','The SELECT statement cannot be used with an index. With large database tables this can lead to long runtimes.<BR/>Check whether you can formulate the WHERE condition appropriately for a table index.<BR/>Check whether you can/have to create an additional table index.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_A_0002','es','CL_CI_TEST_SELECT_TAW_A_0002');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_A_0002','fr','The SELECT statement cannot be used with an index. With large database tables this can lead to long runtimes.<BR/>Check whether you can formulate the WHERE condition appropriately for a table index.<BR/>Check whether you can/have to create an additional table index.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_A_0010','en','Table does not exist or has no nametab entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_A_0010','es','CL_CI_TEST_SELECT_TAW_A_0010');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_A_0010','fr','Table does not exist or has no nametab entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_A_0003','en','No first field of a table index in WHERE condition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_A_0003','es','CL_CI_TEST_SELECT_TAW_A_0003');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_A_0003','fr','No first field of a table index in WHERE condition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_A_0003','en','The SELECT statement can probably not be used with an index. With large database tables this can lead to long runtimes.<BR/>Check whether you can formulate the WHERE condition appropriately for a table index.<BR/>Check whether you can/have to create an additional table index.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_A_0003','es','CL_CI_TEST_SELECT_TAW_A_0003');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_A_0003','fr','The SELECT statement can probably not be used with an index. With large database tables this can lead to long runtimes.<BR/>Check whether you can formulate the WHERE condition appropriately for a table index.<BR/>Check whether you can/have to create an additional table index.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_A_0004','en','Despite CLIENT SPECIFIED no client-specific field in WHERE condition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_A_0004','es','CL_CI_TEST_SELECT_TAW_A_0004');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_A_0004','fr','Despite CLIENT SPECIFIED no client-specific field in WHERE condition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_A_0004','en','The CLIENT SPECIFIED addition removes the restrictions for the current client. Check whether a cross-client access is useful.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_A_0004','es','CL_CI_TEST_SELECT_TAW_A_0004');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_A_0004','fr','The CLIENT SPECIFIED addition removes the restrictions for the current client. Check whether a cross-client access is useful.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1601','fr','Screen Errors;DY_NEXT_DYNPRO     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1602','fr','Screen Errors;DY_MISSING_MODUL   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1603','fr','Screen Errors;DY_MISSING_FIELD   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1604','fr','Screen Errors;DY_MISS_SCREEN     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1605','fr','Screen Errors;DY_MISS_DYNPRO     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1607','fr','Screen Errors;DY_UNUSED_MODUL    ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1608','fr','Screen Errors;DY_MISS_ATTR       ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1609','fr','Screen Errors;DY_MISS_DOMAIN1    ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1610','fr','Screen Errors;DY_MISS_DOMAIN2    ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1611','fr','Screen Errors;DY_FIELD_LIST1     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1612','fr','Screen Errors;DY_FIELD_LIST2     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1613','fr','Screen Errors;DY_ISOLATED        ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1614','fr','Screen Errors;DY_NOREF           ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1615','fr','Screen Errors;DY_NOREF_DEF       ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1616','fr','Screen Errors;DY_MISS_TAB_CONT1  ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1617','fr','Screen Errors;DY_MISS_TAB_CONT2  ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1618','fr','Screen Errors;DY_UNUSED_TAB_CONT ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1619','fr','Screen Errors;DY_UNUSED_DYNPRO   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1620','fr','Screen Errors;DY_SYNTAX_ERROR_1  ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1621','fr','Screen Errors;DY_EL_DDIC_REF     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1622','fr','Screen Errors;DY_EL_TEXT         ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1623','fr','Screen Errors;DY_EL_TYPE_WRONG   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1624','fr','Screen Errors;DY_EL_TEXT_LEN     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1625','fr','Screen Errors;DY_EL_MANAGE_LEN   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1626','fr','Screen Errors;DY_EL_COLLISION    ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1627','fr','Screen Errors;DY_EL_CONTEXT      ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1628','fr','Screen Errors;DY_SEL_MISSING     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1695','fr','Screen Errors;DY_MISS_DYNPRO_PROG');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1696','fr','Screen Errors;DY_SYNTAX_ERROR_2  ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1699','fr','Screen Errors;DY_INTERNAL        ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1700','fr','Text Element Missing in a Character String');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1701','fr','Text Element not Defined in Text Pool');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1702','fr','Character String in Source Code Contains Invalid Characters');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1703','fr','Text element ends with an umlaut');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1704','fr','Different strings have the same text element ID');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1705','fr','Text Element Defined Differently in Text Pool and Program');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1706','fr','Text element will not be used');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1707','fr','Text Element in Shared Include');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1708','fr','Superfluous Selection Text');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1709','fr','Selection text has not been maintainged');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1710','fr','Text Pool Inconsistent');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1800','fr','Transaction Code not Entered in TSTC');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1801','fr','SUBMIT Parameter Does Not Exist');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1802','fr','SELECT-OPTION Missing for SUBMIT Parameters');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1803','fr','Dialog module is not entered in the TDCT');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1804','fr','Report called using SUBMIT is not Type 1');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1805','fr','User Exit Enhancement Missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1806','fr','Function Module with Interface Missing in Func. Group (X..)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1807','fr','Function Module not Deactivated Using TMOD/SMOD');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1900','fr','Potential Generation Bottleneck: Load Table More Than 98% Full');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1901','fr','Potential Generation Bottleneck: Load Table More Than 90% Full');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_2000','fr','Error Using Variable with Language Identifer in TRANSLATE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_2003','fr','Error Using Variable without Language Identifer in TRANSLATE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_3100','fr','SELECT Loop contains statement that destroys cursor');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_3101','fr','SELECT loop contains PERFORM call (cursor may be lost)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_3200','fr','Index Access to Internal Table Outside a Loop');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_3201','fr','Index Access to Internal Table Outside a Loop (in FORM)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_9999','fr','Internal Tool Error: ASSERT Condition Violated');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0000','en','Program contains syntax errors');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0001','en','Program contains generation errors');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0002','en','Internal Error: Program Contains Scan Errors');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0003','en','Internal Error: SCAN WITH STRUCTURE Is Inconsistent');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0004','en','Program contains space characters');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0005','en','Function Module Already Defined');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0006','en','Function module definition has no TFDIR entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0008','en','Program with Invalid Namespace');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0009','en','Program source text cannot be read');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0017','en','Externally referenced object will not be transported');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0019','en','Program contains inconsistent timestamps');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0021','en','Program package has no TDEVC entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0023','en','Program has no Object Directory entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0024','en','Duplicated Call from SET EXTENDED CHECK OFF');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0025','en','Call from SET EXTENDED CHECK ON is missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0033','en','Program contains inactive program INCLUDES');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0036','en','Externally referenced program contains syntax errors');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0037','en','Externally referenced program has no TRDIR entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0038','en','Cannot read externally referenced program');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0039','en','No Valid Test Program (No TRDIR Entry or INCLUDE)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0040','en','Cannot change program in current system');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0041','en','Object has not been assigned to an application package');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0042','en','Program uses object from an invalid package (error)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0043','en','Program uses object from an invalid package (warning)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0044','en','Program uses object from an invalid package (info)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0100','en','There is no subroutine for this PERFORM call');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_A_0010','en','The table that is to be read using SELECT, does not exist statically in the system or has no nametab entry. Check whether the table is created dynamically at runtime.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_A_0010','es','CL_CI_TEST_SELECT_TAW_A_0010');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_A_0010','fr','The table that is to be read using SELECT, does not exist statically in the system or has no nametab entry. Check whether the table is created dynamically at runtime.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_A_0001','en','No field of a table index in WHERE condition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_A_0001','es','CL_CI_TEST_IMUD_TAW_A_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_A_0001','fr','No field of a table index in WHERE condition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_A_0001','en','UPDATE dbtab SET ... WHERE  or DELETE FROM dbtab WHERE ... cannot be processed with the use of an index. Check whether this leads to runtime problems, and whether an additional table index may be necessary.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_A_0001','es','CL_CI_TEST_IMUD_TAW_A_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_A_0001','fr','UPDATE dbtab SET ... WHERE  or DELETE FROM dbtab WHERE ... cannot be processed with the use of an index. Check whether this leads to runtime problems, and whether an additional table index may be necessary.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_A_0002','en','No first field of table index in WHERE condition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_A_0002','es','CL_CI_TEST_IMUD_TAW_A_0002');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_A_0002','fr','No first field of table index in WHERE condition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_A_0002','en','UPDATE dbtab SET ... WHERE  or DELETE FROM dbtab WHERE ... cannot be processed with the use of an index. Check whether this leads to runtime problems, and whether an additional table index may be necessary.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_A_0002','es','CL_CI_TEST_IMUD_TAW_A_0002');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_A_0002','fr','UPDATE dbtab SET ... WHERE  or DELETE FROM dbtab WHERE ... cannot be processed with the use of an index. Check whether this leads to runtime problems, and whether an additional table index may be necessary.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_A_0004','en','No client-specific field in WHERE condition despite use of CLIENT SPECIFIED');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_A_0004','es','CL_CI_TEST_IMUD_TAW_A_0004');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_TAW_A_0004','fr','No client-specific field in WHERE condition despite use of CLIENT SPECIFIED');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_A_0004','en','UPDATE dbtab SET ... WHERE  or DELETE FROM dbtab WHERE ...  are formulated with CLIENT SPECIFIED  but there is no client-specific field in the WHERE condition. Check whether cross-client changes would be useful.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_A_0004','es','CL_CI_TEST_IMUD_TAW_A_0004');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_TAW_A_0004','fr','UPDATE dbtab SET ... WHERE  or DELETE FROM dbtab WHERE ...  are formulated with CLIENT SPECIFIED  but there is no client-specific field in the WHERE condition. Check whether cross-client changes would be useful.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_BYBUF_0001','en','Buffered table in a JOIN');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_BYBUF_0001','es','CL_CI_TEST_SELECT_TAW_BYBUF_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_BYBUF_0001','fr','Buffered table in a JOIN');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_BYBUF_0001','en','JOINs bypass the table buffer. You should, if possible, use only simple SELECT statements on buffered tables to avoid the buffer being bypassed.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_BYBUF_0001','es','CL_CI_TEST_SELECT_TAW_BYBUF_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_BYBUF_0001','fr','JOINs bypass the table buffer. You should, if possible, use only simple SELECT statements on buffered tables to avoid the buffer being bypassed.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_BYBUF_0002','en','Buffered tables in SELECT with subquery');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_BYBUF_0002','es','CL_CI_TEST_SELECT_TAW_BYBUF_0002');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_BYBUF_0002','fr','Buffered tables in SELECT with subquery');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_BYBUF_0002','en','Subqueries bypass the table buffer. You should, if possible, only use simple SELECT s with buffered tables to avoid the risk of the buffer being bypassed.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_BYBUF_0002','es','CL_CI_TEST_SELECT_TAW_BYBUF_0002');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_BYBUF_0002','fr','Subqueries bypass the table buffer. You should, if possible, only use simple SELECT s with buffered tables to avoid the risk of the buffer being bypassed.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_BYBUF_0003','en','Access reads past the table buffer');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_BYBUF_0003','es','CL_CI_TEST_SELECT_TAW_BYBUF_0003');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_BYBUF_0003','fr','Access reads past the table buffer');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_BYBUF_0003','en','Access reads past the table buffer: DISTINCT, COUNT(..) ,  MIN(..),  MAX(..),  SUM(..),  AVG(..),  NULL VALUE ,  GROUP BY, HAVING,  ORDER BY<BR/>The following lead to the table buffer being bypassed. Do not use these with buffered tables:<BR/> - Aggregate functions<BR/>  - SELECT DISTINCT<BR/> - GROUP BY<BR/> - ORDER BY ... with other sequence than in primary key<BR/> - ... IS [NOT] NULL  in the WHERE condition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_BYBUF_0003','es','CL_CI_TEST_SELECT_TAW_BYBUF_0003');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_BYBUF_0003','fr','Access reads past the table buffer: DISTINCT, COUNT(..) ,  MIN(..),  MAX(..),  SUM(..),  AVG(..),  NULL VALUE ,  GROUP BY, HAVING,  ORDER BY<BR/>The following lead to the table buffer being bypassed. Do not use these with buffered tables:<BR/> - Aggregate functions<BR/>  - SELECT DISTINCT<BR/> - GROUP BY<BR/> - ORDER BY ... with other sequence than in primary key<BR/> - ... IS [NOT] NULL  in the WHERE condition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_BYBUF_0004','en','Access to single record buffered table without SELECT SINGLE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_BYBUF_0004','es','CL_CI_TEST_SELECT_TAW_BYBUF_0004');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_BYBUF_0004','fr','Access to single record buffered table without SELECT SINGLE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_BYBUF_0004','en','With single record buffered database tables, only the explicit use of SELECT SINGLE leads to the table buffer being used.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_BYBUF_0004','es','CL_CI_TEST_SELECT_TAW_BYBUF_0004');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_BYBUF_0004','fr','With single record buffered database tables, only the explicit use of SELECT SINGLE leads to the table buffer being used.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_BYBUF_0005','en','Generically buffered key area not fully specified');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_BYBUF_0005','es','CL_CI_TEST_SELECT_TAW_BYBUF_0005');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_BYBUF_0005','fr','Generically buffered key area not fully specified');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0101','en','Wrong Number of Parameters for This PERFORM Call');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0102','en','Undefined TABLES Parameter for This PERFORM Call');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0103','en','Formal Parameter Incompatible with Actual Parameter');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0104','en','External PERFORM in an INCLUDE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0105','en','STRUCTURE Parameter');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0106','en','Literal Incompatible with Formal Parameter');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0119','en','Argument categories are not suitable (USING/CHANGING)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0121','en','System will not call subroutine');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0134','en','System will not call FORM (FORM in multiple use)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0135','en','Missing Formal Paramter Type');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0200','en','CASE Statement with Identical WHEN Conditions');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0201','en','LOOP with WHERE/TO condition contains an AT (Warning)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0202','en','The TO limit in the LOOP is overwritten in the rump');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0203','en','Name begins with a reserved prefix %_');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0204','en','FREE MEMORY Statement Without ID Entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0205','en','INCLUDE Program Is Not Type I');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0206','en','The first statement after CASE is not WHEN');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0208','en','Statement in DATA Declaration');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0209','en','STOP Statement in MODUL Definition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0211','en','SY field will be overwritten');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0212','en','Predefined field (%_) will be overwritten');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0213','en','Declaration in Event');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0214','en','Text Literal Unnecessarily Converted to Integer');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0215','en','Redundant Assignment');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0216','en','Duplicate Event Definition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0217','en','RAISE Statement Outside Function Group');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0218','en','EXPORTING Parameter Is Not Called');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0219','en','STOP Statement in Function Module');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0220','en','MODULE Statement in FORM POOL');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0230','en','LINE-SIZE Entered Longer Than 132');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0232','en','ASSIGN Beyond Field Boundary');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0233','en','Declaration in Module (Offset Without Length Specification)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0234','en','You can replace WRITE TO with MOVE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0235','en','LOOP with FROM condition contains an AT (info)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0300','en','Authorization Field Missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0301','en','Authorization Object not Entered in the Table TOBJ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0302','en','Wrong Number of Authorization Fields');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0303','en','Authorizations: Fixed Vals for Domns Falsely Entered for ID');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0304','en','Authorizations: Field Length Too Long');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0401','en','GET/SET Parameters: Field Length Too Long');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0402','en','GET/SET-Parameter Not Entered in TPARA');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0600','en','T100 MESSAGE Not Defined');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0601','en','MESSAGE call contains the wrong number of WITH parameters');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0602','en','Long Text Missing for MESSAGE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0603','en','Long Text for MESSAGE not Activated');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0604','en','Active long text for MESSAGE is obsolete');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0700','en','GUI Status Not Defined');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0701','en','TITLE not Defined');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0702','en','STATUS Definition in Formpool');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0703','en','SET TITLE Call in Formpool');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0704','en','Dynamic Specification of GUI Status');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0800','en','BREAK-POINT Statement');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0801','en','Obsolete Statement SYNTAX-TRACE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0802','en','User-Specific Control Flow (usin SY-UNAME)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0803','en','Statement for Time Measurement');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0804','en','Statement for Time Measurement of SCONT Commands');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0805','en','Statement consists of one point');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0806','en','Statement after EXIT/STOP/RETURN/RAISE/SUBMIT cannot be reached');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0807','en','Pseudo-comment with no effect');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0901','en','Undefined Search Help');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0903','en','Initial Value Too Long for Field Type');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0905','en','Field Name with Hyphen');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0906','en','Unused Fields');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0908','en','Unread Fields');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0910','en','Unused Fields (INCLUDE Is Shared)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0911','en','Unread Fields (INCLUDE Is Shared)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0912','en','Field Name Identical to Predefined Type but Different Type');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_0913','en','Field Name Identical to Operator Name');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1000','en','Function Module Called Has no TFDIR Entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1001','en','Function Module Parameter Missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1002','en','Function Module Parameter Missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1004','en','The called function module is obsolete');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1006','en','Access to Undefined Return Code After CALL FUNCTION');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1007','en','Return codes of function module exceptions are ignored');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1011','en','EXCEPTION for RAISE Statement Missing in Function Module');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1012','en','No RAISE Statement in Function Group for EXCEPTION in FM');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1200','en','ASCII/EBCDIC Problem (Comparison with Characters)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1201','en','Potential ASCII/EBCDIC Problem with Untyped Parameter');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1300','en','Warning of Syntax Check with Very High Change Priority');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1301','en','Warning of Syntax Check with High Change Priority');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_BYBUF_0005','en','With generically or single record buffered database tables, you can only use the table buffer if the generic key (or, in the case of single record buffering, the full primary key) is fully specified.
\nOnly fields with an = or EQ condition in the WHERE clause are evaluated.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_BYBUF_0005','es','CL_CI_TEST_SELECT_TAW_BYBUF_0005');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_BYBUF_0005','fr','With generically or single record buffered database tables, you can only use the table buffer if the generic key (or, in the case of single record buffering, the full primary key) is fully specified.
\nOnly fields with an = or EQ condition in the WHERE clause are evaluated.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_BYBUF_0006','en','SELECT on client-specific table with CLIENT SPECIFIED without client field in the WHERE condition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_BYBUF_0006','es','CL_CI_TEST_SELECT_TAW_BYBUF_0006');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_SELECT_TAW_BYBUF_0006','fr','SELECT on client-specific table with CLIENT SPECIFIED without client field in the WHERE condition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_BYBUF_0006','en','For a client-specific buffered table there is always a generic buffering relevant to the client, even if the table is marked as completely buffered. If you use a SELECT statement with  CLIENT SPECIFIED but there is no specification for the client field in the WHERE condition, the generic key is not completely specified.<BR/>With generic or single-record buffering database tables, you can only use the table buffer when the generic key (or with single record buffering, the full primary key) is fully specified.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_BYBUF_0006','es','CL_CI_TEST_SELECT_TAW_BYBUF_0006');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_SELECT_TAW_BYBUF_0006','fr','For a client-specific buffered table there is always a generic buffering relevant to the client, even if the table is marked as completely buffered. If you use a SELECT statement with  CLIENT SPECIFIED but there is no specification for the client field in the WHERE condition, the generic key is not completely specified.<BR/>With generic or single-record buffering database tables, you can only use the table buffer when the generic key (or with single record buffering, the full primary key) is fully specified.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_NESTED_0001','en','INSERT, UPDATE, MODIFY, DELETE in loop');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_NESTED_0001','es','CL_CI_TEST_IMUD_NESTED_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_IMUD_NESTED_0001','fr','INSERT, UPDATE, MODIFY, DELETE in loop');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_NESTED_0001','en','Changing database statements (INSERT, UPDATE, MODIFY, DELETE) in loops lead to multiple database accesses. Check whether an array change is possible.<BR/>
\nLoops ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_NESTED_0001','es','CL_CI_TEST_IMUD_NESTED_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_IMUD_NESTED_0001','fr','Changing database statements (INSERT, UPDATE, MODIFY, DELETE) in loops lead to multiple database accesses. Check whether an array change is possible.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0001','en','Table type and delivery class not maintained');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0001','es','CL_CI_TEST_DDIC_TABLES_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0001','fr','Table type and delivery class not maintained');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0001','en','For the examined table, the table type and delivery class are not maintained.<BR/>These settings are required to carry out the performance checks.<BR/>The table type and delivery class should be maintained. ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0001','es','CL_CI_TEST_DDIC_TABLES_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0001','fr','CL_CI_TEST_DDIC_TABLES_0001');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0002','en','Data type and size category not maintained');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0002','es','CL_CI_TEST_DDIC_TABLES_0002');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0002','fr','Data type and size category not maintained');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0002','en',' For the examined table, the data type and size category are not maintained.<BR/>These settings are required to carry out the performance checks.<BR/>The data type and size category should be maintained.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0002','es','CL_CI_TEST_DDIC_TABLES_0002');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0002','fr','CL_CI_TEST_DDIC_TABLES_0002');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0003','en','Option Buffering allowed, but switched off selected');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0003','es','CL_CI_TEST_DDIC_TABLES_0003');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0003','fr','Option Buffering allowed, but switched off selected');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0003','en','For the examined table, the option Buffering allowed, but switched off is selected.<BR/>This option should only be used with tables whose size category in the customer system cannot be predicted by the developer. Depending on the data constellation, the table may be very large in the customer sytem (in which case it should not be buffered) or relatively small (in which case it can be buffered).<BR/>If the above description does not apply to the examined table, you must decide whether or not the table should be buffered.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0003','es','CL_CI_TEST_DDIC_TABLES_0003');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0003','fr','For the examined table, the option Buffering allowed, but switched off is selected.<BR/>This option should only be used with tables whose size category in the customer system cannot be predicted by the developer. Depending on the data constellation, the table may be very large in the customer sytem (in which case it should not be buffered) or relatively small (in which case it can be buffered).<BR/>If the above description does not apply to the examined table, you must decide whether or not the table should be buffered.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0010','en','No buffer type selected');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0010','es','CL_CI_TEST_DDIC_TABLES_0010');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0010','fr','No buffer type selected');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0010','en','No buffer type has been selected for the examined table and it is in the delivery class C, G, E, or S.<BR/>The delivery classes C, G, E, or S refer to customer and system tables. It is usually a small table with master or transaction data, which allows the table to be buffered.<BR/>The solution depends on the table content. If it is a customer or system table that does not get too big and rarely changes, the table should be buffered. If it is not a customer or system table, the delivery class should be corrected accordingly.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0010','es','CL_CI_TEST_DDIC_TABLES_0010');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1302','en','Warning of Syntax Check with Medium Change Priority');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1303','en','Warning with Medium Priority');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1304','en','Warning with Medium Priority (Cannot Be Commented Out)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1305','en','Warning with Low Priority (Can Be Commented Out)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1306','en','Structural Enhancement by Customer (Very Serious Problem)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1307','en','Structural Enhancement by Customer (Very Serious Problem)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1308','en','Structural Enhancement by Customer (Medium-Priority Problem)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1309','en','Structure Enhancements by Customers (Warning)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1311','en','Warning with High Change Priority (Export/Import)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1400','en','Display of CURR Field Without CURRENCY Addition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1401','en','Display of a UNIT Field Without a UNIT Addition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1402','en','Display of UNIT Field Without UNIT Addition with DECIMALS');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1500','en','COMMON PART definition is different');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1601','en','Screen Errors;DY_NEXT_DYNPRO     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1602','en','Screen Errors;DY_MISSING_MODUL   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1603','en','Screen Errors;DY_MISSING_FIELD   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1604','en','Screen Errors;DY_MISS_SCREEN     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1605','en','Screen Errors;DY_MISS_DYNPRO     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1607','en','Screen Errors;DY_UNUSED_MODUL    ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1608','en','Screen Errors;DY_MISS_ATTR       ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1609','en','Screen Errors;DY_MISS_DOMAIN1    ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1610','en','Screen Errors;DY_MISS_DOMAIN2    ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1611','en','Screen Errors;DY_FIELD_LIST1     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1612','en','Screen Errors;DY_FIELD_LIST2     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1613','en','Screen Errors;DY_ISOLATED        ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1614','en','Screen Errors;DY_NOREF           ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1615','en','Screen Errors;DY_NOREF_DEF       ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1616','en','Screen Errors;DY_MISS_TAB_CONT1  ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1617','en','Screen Errors;DY_MISS_TAB_CONT2  ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1618','en','Screen Errors;DY_UNUSED_TAB_CONT ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1619','en','Screen Errors;DY_UNUSED_DYNPRO   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1620','en','Screen Errors;DY_SYNTAX_ERROR_1  ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1621','en','Screen Errors;DY_EL_DDIC_REF     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1622','en','Screen Errors;DY_EL_TEXT         ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1623','en','Screen Errors;DY_EL_TYPE_WRONG   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1624','en','Screen Errors;DY_EL_TEXT_LEN     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1625','en','Screen Errors;DY_EL_MANAGE_LEN   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1626','en','Screen Errors;DY_EL_COLLISION    ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1627','en','Screen Errors;DY_EL_CONTEXT      ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1628','en','Screen Errors;DY_SEL_MISSING     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1695','en','Screen Errors;DY_MISS_DYNPRO_PROG');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1696','en','Screen Errors;DY_SYNTAX_ERROR_2  ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1699','en','Screen Errors;DY_INTERNAL        ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1700','en','Text Element Missing in a Character String');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1701','en','Text Element not Defined in Text Pool');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1702','en','Character String in Source Code Contains Invalid Characters');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1703','en','Text element ends with an umlaut');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1704','en','Different strings have the same text element ID');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1705','en','Text Element Defined Differently in Text Pool and Program');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1706','en','Text element will not be used');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1707','en','Text Element in Shared Include');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1708','en','Superfluous Selection Text');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1709','en','Selection text has not been maintainged');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1710','en','Text Pool Inconsistent');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1800','en','Transaction Code not Entered in TSTC');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1801','en','SUBMIT Parameter Does Not Exist');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1802','en','SELECT-OPTION Missing for SUBMIT Parameters');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1803','en','Dialog module is not entered in the TDCT');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1804','en','Report called using SUBMIT is not Type 1');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1805','en','User Exit Enhancement Missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1806','en','Function Module with Interface Missing in Func. Group (X..)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1807','en','Function Module not Deactivated Using TMOD/SMOD');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1900','en','Potential Generation Bottleneck: Load Table More Than 98% Full');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_1901','en','Potential Generation Bottleneck: Load Table More Than 90% Full');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_2000','en','Error Using Variable with Language Identifer in TRANSLATE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_2003','en','Error Using Variable without Language Identifer in TRANSLATE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_3100','en','SELECT Loop contains statement that destroys cursor');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_3101','en','SELECT loop contains PERFORM call (cursor may be lost)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_3200','en','Index Access to Internal Table Outside a Loop');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_3201','en','Index Access to Internal Table Outside a Loop (in FORM)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_EXTENDED_CHECK_9999','en','Internal Tool Error: ASSERT Condition Violated');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0000','en','Program contains syntax errors');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0001','en','Program contains generation errors');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0002','en','Internal Error: Program Contains Scan Errors');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0003','en','Internal Error: SCAN WITH STRUCTURE Is Inconsistent');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0004','en','Program contains space characters');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0005','en','Function Module Already Defined');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0006','en','Function module definition has no TFDIR entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0008','en','Program with Invalid Namespace');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0009','en','Program source text cannot be read');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0017','en','Externally referenced object will not be transported');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0019','en','Program contains inconsistent timestamps');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0021','en','Program package has no TDEVC entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0023','en','Program has no Object Directory entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0010','fr','No buffer type has been selected for the examined table and it is in the delivery class C, G, E, or S.<BR/>The delivery classes C, G, E, or S refer to customer and system tables. It is usually a small table with master or transaction data, which allows the table to be buffered.<BR/>The solution depends on the table content. If it is a customer or system table that does not get too big and rarely changes, the table should be buffered. If it is not a customer or system table, the delivery class should be corrected accordingly.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0011','en','Buffering switched on for table and delivery class A,L or W');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0011','es','CL_CI_TEST_DDIC_TABLES_0011');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0011','fr','Buffering switched on for table and delivery class A,L or W');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0011','en','Buffering is switched on for the examined table and it is in the delivery class A, L, or W.<BR/>The delivery class ''A'' refers to master and transaction data. The tables are large and change frequently. Delivery class ''L'' has tables with temporary data, which also generally indicates frequent changes. Therefore buffering these tables is, from a performance point of view, unfavorable. Tables of the delivery class ''W'' are frequently used by SAP Technology Development, and it is often a prerequisite that these are not buffered.<BR/>The solution depends on the table content. If the table is assigned to one of the above delivery classes, the table should not be buffered. Otherwise you should correct the delivery class accordingly.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0011','es','CL_CI_TEST_DDIC_TABLES_0011');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0011','fr','Buffering is switched on for the examined table and it is in the delivery class A, L, or W.<BR/>The delivery class ''A'' refers to master and transaction data. The tables are large and change frequently. Delivery class ''L'' has tables with temporary data, which also generally indicates frequent changes. Therefore buffering these tables is, from a performance point of view, unfavorable. Tables of the delivery class ''W'' are frequently used by SAP Technology Development, and it is often a prerequisite that these are not buffered.<BR/>The solution depends on the table content. If the table is assigned to one of the above delivery classes, the table should not be buffered. Otherwise you should correct the delivery class accordingly.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0012','en','Buffering switched on for large table');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0012','es','CL_CI_TEST_DDIC_TABLES_0012');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0012','fr','Buffering switched on for large table');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0012','en','Buffering is switched on for the examined table and the size category is larger than 2.<BR/>Very large tables should not be buffered, because they suppress many small tables in the memory and this significantly slows done any access to them.<BR/>If the table is large (greater than 5 MB), you should switch buffering off. If it is smaller, you should adjust the size category.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0012','es','CL_CI_TEST_DDIC_TABLES_0012');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0012','fr','Buffering is switched on for the examined table and the size category is larger than 2.<BR/>Very large tables should not be buffered, because they suppress many small tables in the memory and this significantly slows done any access to them.<BR/>If the table is large (greater than 5 MB), you should switch buffering off. If it is smaller, you should adjust the size category.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','compl','CL_CI_TEST_DDIC_TABLES_0011','en','CL_CI_TEST_DDIC_TABLES_0011');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','compl','CL_CI_TEST_DDIC_TABLES_0011','es','CL_CI_TEST_DDIC_TABLES_0011');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','compl','CL_CI_TEST_DDIC_TABLES_0011','fr','CL_CI_TEST_DDIC_TABLES_0011');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0013','en','No buffering type selected for table with data type APPL2');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0013','es','CL_CI_TEST_DDIC_TABLES_0013');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0013','fr','No buffering type selected for table with data type APPL2');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0013','en','No buffering type is selected for the examined table and it has data type ''APPL2''.<BR/>Tables with data type ''APPL2'' should be organisation or customizing tables. These tables should be reasonably small and their content should very rarely change. These are the right prerequisites to gain significant performance improvement by buffering the table.<BR/>The solution depends on the table content. If it is organisation or customizing data, you should buffer the table. If the table content does not consist of organization or customizing data, the data type should be corrected accordingly.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0013','es','CL_CI_TEST_DDIC_TABLES_0013');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0013','fr','No buffering type is selected for the examined table and it has data type ''APPL2''.<BR/>Tables with data type ''APPL2'' should be organisation or customizing tables. These tables should be reasonably small and their content should very rarely change. These are the right prerequisites to gain significant performance improvement by buffering the table.<BR/>The solution depends on the table content. If it is organisation or customizing data, you should buffer the table. If the table content does not consist of organization or customizing data, the data type should be corrected accordingly.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0014','en','Buffering switched on for table with data type APPL0 or APPL1');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0014','es','CL_CI_TEST_DDIC_TABLES_0014');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0014','fr','Buffering switched on for table with data type APPL0 or APPL1');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0014','en','Buffering is switched on for the examined table and it has data type ''APPL0'' or ''APPL1''.<BR/>Tables with data type ''APPL0'' or ''APPL1'' should contain master or transaction data, so these tables should either contain a large amount of data or their content should change frequently. Therefore buffering the table is unfavourable. Very large tables suppress other tables in the buffer memory and hence slow done any access to them. Transaction data should not be buffered because the synchronization of the changes on the various application servers is very time consuming.<BR/>The solution depends on the table content. If it is master or transaction data, the table should not be buffered. If the table content does not consist of master or transaction data, the data type should be corrected accordingly.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0014','es','CL_CI_TEST_DDIC_TABLES_0014');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0024','en','Duplicated Call from SET EXTENDED CHECK OFF');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0025','en','Call from SET EXTENDED CHECK ON is missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0033','en','Program contains inactive program INCLUDES');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0036','en','Externally referenced program contains syntax errors');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0037','en','Externally referenced program has no TRDIR entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0038','en','Cannot read externally referenced program');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0039','en','No Valid Test Program (No TRDIR Entry or INCLUDE)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0040','en','Cannot change program in current system');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0041','en','Object has not been assigned to an application package');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0042','en','Program uses object from an invalid package (error)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0043','en','Program uses object from an invalid package (warning)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0044','en','Program uses object from an invalid package (info)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0100','en','There is no subroutine for this PERFORM call');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0101','en','Wrong Number of Parameters for This PERFORM Call');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0102','en','Undefined TABLES Parameter for This PERFORM Call');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0103','en','Formal Parameter Incompatible with Actual Parameter');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0104','en','External PERFORM in an INCLUDE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0105','en','STRUCTURE Parameter');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0106','en','Literal Incompatible with Formal Parameter');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0119','en','Argument categories are not suitable (USING/CHANGING)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0121','en','System will not call subroutine');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0134','en','System will not call FORM (FORM in multiple use)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0135','en','Missing Formal Paramter Type');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0200','en','CASE Statement with Identical WHEN Conditions');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0201','en','LOOP with WHERE/TO condition contains an AT (Warning)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0202','en','The TO limit in the LOOP is overwritten in the rump');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0203','en','Name begins with a reserved prefix %_');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0204','en','FREE MEMORY Statement Without ID Entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0205','en','INCLUDE Program Is Not Type I');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0206','en','The first statement after CASE is not WHEN');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0208','en','Statement in DATA Declaration');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0209','en','STOP Statement in MODUL Definition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0211','en','SY field will be overwritten');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0212','en','Predefined field (%_) will be overwritten');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0213','en','Declaration in Event');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0214','en','Text Literal Unnecessarily Converted to Integer');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0215','en','Redundant Assignment');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0216','en','Duplicate Event Definition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0217','en','RAISE Statement Outside Function Group');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0218','en','EXPORTING Parameter Is Not Called');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0219','en','STOP Statement in Function Module');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0220','en','MODULE Statement in FORM POOL');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0230','en','LINE-SIZE Entered Longer Than 132');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0232','en','ASSIGN Beyond Field Boundary');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0233','en','Declaration in Module (Offset Without Length Specification)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0234','en','You can replace WRITE TO with MOVE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0235','en','LOOP with FROM condition contains an AT (info)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0300','en','Authorization Field Missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0301','en','Authorization Object not Entered in the Table TOBJ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0302','en','Wrong Number of Authorization Fields');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0303','en','Authorizations: Fixed Vals for Domns Falsely Entered for ID');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0304','en','Authorizations: Field Length Too Long');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0401','en','GET/SET Parameters: Field Length Too Long');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0402','en','GET/SET-Parameter Not Entered in TPARA');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0600','en','T100 MESSAGE Not Defined');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0601','en','MESSAGE call contains the wrong number of WITH parameters');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0602','en','Long Text Missing for MESSAGE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0603','en','Long Text for MESSAGE not Activated');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0604','en','Active long text for MESSAGE is obsolete');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0700','en','GUI Status Not Defined');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0701','en','TITLE not Defined');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0702','en','STATUS Definition in Formpool');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0703','en','SET TITLE Call in Formpool');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0704','en','Dynamic Specification of GUI Status');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0800','en','BREAK-POINT Statement');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0801','en','Obsolete Statement SYNTAX-TRACE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0802','en','User-Specific Control Flow (usin SY-UNAME)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0803','en','Statement for Time Measurement');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0804','en','Statement for Time Measurement of SCONT Commands');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0805','en','Statement consists of one point');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0806','en','Statement after EXIT/STOP/RETURN/RAISE/SUBMIT cannot be reached');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0807','en','Pseudo-comment with no effect');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0901','en','Undefined Search Help');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0903','en','Initial Value Too Long for Field Type');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0905','en','Field Name with Hyphen');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0906','en','Unused Fields');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0908','en','Unread Fields');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0910','en','Unused Fields (INCLUDE Is Shared)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0911','en','Unread Fields (INCLUDE Is Shared)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0014','fr','Buffering is switched on for the examined table and it has data type ''APPL0'' or ''APPL1''.<BR/>Tables with data type ''APPL0'' or ''APPL1'' should contain master or transaction data, so these tables should either contain a large amount of data or their content should change frequently. Therefore buffering the table is unfavourable. Very large tables suppress other tables in the buffer memory and hence slow done any access to them. Transaction data should not be buffered because the synchronization of the changes on the various application servers is very time consuming.<BR/>The solution depends on the table content. If it is master or transaction data, the table should not be buffered. If the table content does not consist of master or transaction data, the data type should be corrected accordingly.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0015','en','Buffering switched on without buffering type selected');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0015','es','CL_CI_TEST_DDIC_TABLES_0015');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0015','fr','Buffering switched on without buffering type selected');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0015','en','Buffering is switched on for the examined table, but no buffering type is selected.<BR/>Select a buffering type or switch buffering off.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0015','es','CL_CI_TEST_DDIC_TABLES_0015');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0015','fr','Buffering is switched on for the examined table, but no buffering type is selected.<BR/>Select a buffering type or switch buffering off.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0016','en','Table used in a view and buffering permitted');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0016','es','CL_CI_TEST_DDIC_TABLES_0016');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0016','fr','Table used in a view and buffering permitted');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0016','en','The examined table is used in a view and buffering is permitted.<BR/>If you access a table using a view, the buffering of a table is not utilized and the system always reads from the database instead.<BR/>You should, if possible, always access buffered tables using very simple SELECTs and especially not use views or JOIN s. Otherwise the buffer cannot be used and this significantly affects performance.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0016','es','CL_CI_TEST_DDIC_TABLES_0016');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0016','fr','The examined table is used in a view and buffering is permitted.<BR/>If you access a table using a view, the buffering of a table is not utilized and the system always reads from the database instead.<BR/>You should, if possible, always access buffered tables using very simple SELECTs and especially not use views or JOIN s. Otherwise the buffer cannot be used and this significantly affects performance.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0030','en','Table has a unique secondary index');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0030','es','CL_CI_TEST_DDIC_TABLES_0030');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0030','fr','Table has a unique secondary index');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0030','en','The problem with a unique secondary index is that an INSERT or UPDATE  returns SY-SUBRC = 4 even when the changed table entry is not unique in the unique secondary index. If a developer is not aware that the unique secondary index exists and SY-SUBRC  is read , he or she will assume that the uniqueness of the primary index has been violated.<BR/>You should only create a unique secondary index in exceptional cases, when it has been ensured that all developers, who access the internal table, are also aware of the unique secondary index. This is especially important for tables that are also accessed by customer developments.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0030','es','CL_CI_TEST_DDIC_TABLES_0030');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0030','fr','The problem with a unique secondary index is that an INSERT or UPDATE  returns SY-SUBRC = 4 even when the changed table entry is not unique in the unique secondary index. If a developer is not aware that the unique secondary index exists and SY-SUBRC  is read , he or she will assume that the uniqueness of the primary index has been violated.<BR/>You should only create a unique secondary index in exceptional cases, when it has been ensured that all developers, who access the internal table, are also aware of the unique secondary index. This is especially important for tables that are also accessed by customer developments.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0031','en','Table with data type APPL0 and more than four secondary indexes');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0031','es','CL_CI_TEST_DDIC_TABLES_0031');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0031','fr','Table with data type APPL0 and more than four secondary indexes');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0031','en','Tables with data type APPL0 should be transparent tables containing master data. Because these tables can get very large, having secondary indexes can be very resource-intensive. It is therefore unfavorable if these tables have more than four secondary indexes.<BR/>The solution depends on the table content. If it is really a master data table, which can get very large, the number of secondary indexes should be reduced to a maximum of four. If the table content is not master data you should correct the data type accordingly.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0031','es','CL_CI_TEST_DDIC_TABLES_0031');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0031','fr','Tables with data type APPL0 should be transparent tables containing master data. Because these tables can get very large, having secondary indexes can be very resource-intensive. It is therefore unfavorable if these tables have more than four secondary indexes.<BR/>The solution depends on the table content. If it is really a master data table, which can get very large, the number of secondary indexes should be reduced to a maximum of four. If the table content is not master data you should correct the data type accordingly.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0032','en','Table with a secondary index that contains more than four fields');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0032','es','CL_CI_TEST_DDIC_TABLES_0032');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0032','fr','Table with a secondary index that contains more than four fields');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0032','en','The examined table has a secondary index that contains more than four fields. The client is not taken into account.<BR/><BR/>From the point of view of performance, a secondary index with several fields is unfavorable for several reasons. Firstly, you must refresh the index as soon as changes to the table content affect index fields, even if these fields are not selective. Secondly, so many fields are not necessary, so that the database optimizer selects the most favorable index. Finally, a smaller index takes up fewer resources.<BR/><BR/>The number of fields (without a client) in the secondary index should be reduced to a maximum of four. A secondary index should only contain genuinely selective fields.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0032','es','CL_CI_TEST_DDIC_TABLES_0032');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0912','en','Field Name Identical to Predefined Type but Different Type');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_0913','en','Field Name Identical to Operator Name');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1000','en','Function Module Called Has no TFDIR Entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1001','en','Function Module Parameter Missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1002','en','Function Module Parameter Missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1004','en','The called function module is obsolete');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1006','en','Access to Undefined Return Code After CALL FUNCTION');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1007','en','Return codes of function module exceptions are ignored');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1011','en','EXCEPTION for RAISE Statement Missing in Function Module');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1012','en','No RAISE Statement in Function Group for EXCEPTION in FM');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1200','en','ASCII/EBCDIC Problem (Comparison with Characters)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1201','en','Potential ASCII/EBCDIC Problem with Untyped Parameter');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1300','en','Warning of Syntax Check with Very High Change Priority');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1301','en','Warning of Syntax Check with High Change Priority');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1302','en','Warning of Syntax Check with Medium Change Priority');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1303','en','Warning with Medium Priority');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1304','en','Warning with Medium Priority (Cannot Be Commented Out)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1305','en','Warning with Low Priority (Can Be Commented Out)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1306','en','Structural Enhancement by Customer (Very Serious Problem)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1307','en','Structural Enhancement by Customer (Very Serious Problem)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1308','en','Structural Enhancement by Customer (Medium-Priority Problem)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1309','en','Structure Enhancements by Customers (Warning)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1311','en','Warning with High Change Priority (Export/Import)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1400','en','Display of CURR Field Without CURRENCY Addition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1401','en','Display of a UNIT Field Without a UNIT Addition');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1402','en','Display of UNIT Field Without UNIT Addition with DECIMALS');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1500','en','COMMON PART definition is different');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1601','en','Screen Errors;DY_NEXT_DYNPRO     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1602','en','Screen Errors;DY_MISSING_MODUL   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1603','en','Screen Errors;DY_MISSING_FIELD   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1604','en','Screen Errors;DY_MISS_SCREEN     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1605','en','Screen Errors;DY_MISS_DYNPRO     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1607','en','Screen Errors;DY_UNUSED_MODUL    ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1608','en','Screen Errors;DY_MISS_ATTR       ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1609','en','Screen Errors;DY_MISS_DOMAIN1    ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1610','en','Screen Errors;DY_MISS_DOMAIN2    ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1611','en','Screen Errors;DY_FIELD_LIST1     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1612','en','Screen Errors;DY_FIELD_LIST2     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1613','en','Screen Errors;DY_ISOLATED        ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1614','en','Screen Errors;DY_NOREF           ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1615','en','Screen Errors;DY_NOREF_DEF       ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1616','en','Screen Errors;DY_MISS_TAB_CONT1  ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1617','en','Screen Errors;DY_MISS_TAB_CONT2  ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1618','en','Screen Errors;DY_UNUSED_TAB_CONT ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1619','en','Screen Errors;DY_UNUSED_DYNPRO   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1620','en','Screen Errors;DY_SYNTAX_ERROR_1  ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1621','en','Screen Errors;DY_EL_DDIC_REF     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1622','en','Screen Errors;DY_EL_TEXT         ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1623','en','Screen Errors;DY_EL_TYPE_WRONG   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1624','en','Screen Errors;DY_EL_TEXT_LEN     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1625','en','Screen Errors;DY_EL_MANAGE_LEN   ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1626','en','Screen Errors;DY_EL_COLLISION    ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1627','en','Screen Errors;DY_EL_CONTEXT      ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1628','en','Screen Errors;DY_SEL_MISSING     ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1695','en','Screen Errors;DY_MISS_DYNPRO_PROG');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1696','en','Screen Errors;DY_SYNTAX_ERROR_2  ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1699','en','Screen Errors;DY_INTERNAL        ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1700','en','Text Element Missing in a Character String');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1701','en','Text Element not Defined in Text Pool');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1702','en','Character String in Source Code Contains Invalid Characters');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1703','en','Text element ends with an umlaut');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1704','en','Different strings have the same text element ID');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1705','en','Text Element Defined Differently in Text Pool and Program');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1706','en','Text element will not be used');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1707','en','Text Element in Shared Include');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1708','en','Superfluous Selection Text');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1709','en','Selection text has not been maintainged');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1710','en','Text Pool Inconsistent');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1800','en','Transaction Code not Entered in TSTC');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1801','en','SUBMIT Parameter Does Not Exist');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1802','en','SELECT-OPTION Missing for SUBMIT Parameters');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1803','en','Dialog module is not entered in the TDCT');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1804','en','Report called using SUBMIT is not Type 1');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1805','en','User Exit Enhancement Missing');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1806','en','Function Module with Interface Missing in Func. Group (X..)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1807','en','Function Module not Deactivated Using TMOD/SMOD');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1900','en','Potential Generation Bottleneck: Load Table More Than 98% Full');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_1901','en','Potential Generation Bottleneck: Load Table More Than 90% Full');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_2000','en','Error Using Variable with Language Identifer in TRANSLATE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_2003','en','Error Using Variable without Language Identifer in TRANSLATE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_3100','en','SELECT Loop contains statement that destroys cursor');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_3101','en','SELECT loop contains PERFORM call (cursor may be lost)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0032','fr','The examined table has a secondary index that contains more than four fields. The client is not taken into account.<BR/><BR/>From the point of view of performance, a secondary index with several fields is unfavorable for several reasons. Firstly, you must refresh the index as soon as changes to the table content affect index fields, even if these fields are not selective. Secondly, so many fields are not necessary, so that the database optimizer selects the most favorable index. Finally, a smaller index takes up fewer resources.<BR/><BR/>The number of fields (without a client) in the secondary index should be reduced to a maximum of four. A secondary index should only contain genuinely selective fields.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0033','en','Table with secondary index and buffering switched on');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0033','es','CL_CI_TEST_DDIC_TABLES        0033');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0033','fr','Table with secondary index and buffering switched on');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0033','en','The examined table has a secondary index and buffering is switched on.<BR/><BR/>Having a secondary index for a buffered table puts an unnecessary strain on resources, because the secondary index is not used when reading the table. Of course, this does not apply if a SELECT statement is used that bypasses the buffer.<BR/>If buffering the table is useful and necessary for performance reasons and several SELECT statements do not explicitly bypass the buffer , you should delete the secondary index. However, if it is a very large table containing master data, for which a secondary index isnecessary for performance reasons, you should switch buffering off.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0033','es','CL_CI_TEST_DDIC_TABLES        0033');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0033','fr','The examined table has a secondary index and buffering is switched on.<BR/><BR/>Having a secondary index for a buffered table puts an unnecessary strain on resources, because the secondary index is not used when reading the table. Of course, this does not apply if a SELECT statement is used that bypasses the buffer.<BR/>If buffering the table is useful and necessary for performance reasons and several SELECT statements do not explicitly bypass the buffer , you should delete the secondary index. However, if it is a very large table containing master data, for which a secondary index isnecessary for performance reasons, you should switch buffering off.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0034','en','Table has data type APPL1 and more than two secondary indexes');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0034','es','CL_CI_TEST_DDIC_TABLES_0034');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0034','fr','Table has data type APPL1 and more than two secondary indexes');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0034','en','The examined table has data type APPL1 and there are more than two secondary indexes.<BR/><BR/>Tables with data type APPL1 should be transparent tables with transaction data. For performance reasons, it is unfavorable if these tables have more than two secondary indexes because when you change the table content of a key field you must also refresh the secondary index.<BR/><BR/>The solution depends on the table content. If it is transaction data, which means that the table content will change frequently, you should limit the number of secondary indexes to a maximum of two. If the table content is not transaction data, you should correct the data type accordingly.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0034','es','CL_CI_TEST_DDIC_TABLES_0034');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0034','fr','The examined table has data type APPL1 and there are more than two secondary indexes.<BR/><BR/>Tables with data type APPL1 should be transparent tables with transaction data. For performance reasons, it is unfavorable if these tables have more than two secondary indexes because when you change the table content of a key field you must also refresh the secondary index.<BR/><BR/>The solution depends on the table content. If it is transaction data, which means that the table content will change frequently, you should limit the number of secondary indexes to a maximum of two. If the table content is not transaction data, you should correct the data type accordingly.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0035','en','At least two fields in the table are both in two indexes');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0035','es','CL_CI_TEST_DDIC_TABLES_0035');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0035','fr','At least two fields in the table are both in two indexes');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0035','en','At least two fields in the table are both in two indexes. The client is not taken into account.<BR/><BR/>Secondary indexes always cause increased memory consumption and, in the case of changing database accesses, loss of performance. You should only create secondary indexes that are really needed and clearly different from one another.<BR/><BR/>Check that you really need two secondary indexes that contain identical errors.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0035','es','CL_CI_TEST_DDIC_TABLES_0035');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0035','fr','At least two fields in the table are both in two indexes. The client is not taken into account.<BR/><BR/>Secondary indexes always cause increased memory consumption and, in the case of changing database accesses, loss of performance. You should only create secondary indexes that are really needed and clearly different from one another.<BR/><BR/>Check that you really need two secondary indexes that contain identical errors.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0036','en','An index is left-aligned within another');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0036','es','CL_CI_TEST_DDIC_TABLES_0036');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','lib','CL_CI_TEST_DDIC_TABLES_0036','fr','An index is left-aligned within another');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0036','en','An index is left-aligned within another.<BR/><BR/>Secondary indexes always cause increased memory consumption and, in the case of changing database accesses, loss of performance. You should only create secondary indexes that are really needed and differ clearly from each other.<BR/><BR/>You can probabaly avoid nesting one index within another.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0036','es','CL_CI_TEST_DDIC_TABLES_0036');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_DDIC_TABLES_0036','fr','An index is left-aligned within another.<BR/><BR/>Secondary indexes always cause increased memory consumption and, in the case of changing database accesses, loss of performance. You should only create secondary indexes that are really needed and differ clearly from each other.<BR/><BR/>You can probabaly avoid nesting one index within another.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_3200','en','Index Access to Internal Table Outside a Loop');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_3201','en','Index Access to Internal Table Outside a Loop (in FORM)');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('metrique','desc','CL_CI_TEST_EXTENDED_CHECK_9999','en','Internal Tool Error: ASSERT Condition Violated');

-- crit√®res
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','compl','CL_CI_TEST_SELECT_TAW_A','en','JOINs are not processed and any accesses bypassing the table buffer are ignored.<BR/>Note: The Code Inspector can currently only correctly analyze WHERE conditions in normal form.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','compl','CL_CI_TEST_SELECT_TAW_A','fr','JOINs are not processed and any accesses bypassing the table buffer are ignored.<BR/>Note: The Code Inspector can currently only correctly analyze WHERE conditions in normal form.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SELECT_TAW_A','en','Analysis of WHERE Condition for SELECT');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SELECT_TAW_A','es','CL_CI_TEST_SELECT_TAW_A');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SELECT_TAW_A','fr','Analysis of WHERE Condition for SELECT');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SELECT_TAW_A','en','In the case of accesses to <B>unbuffered</B> tables, this check examines the WHERE condition of the SELECT statement according to the criteria listed below.<BR/>1: SELECT statement contains no WHERE condition<BR/>2: WHERE condition contains no field of a table index<BR/>3: WHERE condition contains no first field of a table index<BR/>4: Despite CLIENT SPECIFIED addition, no client field in the WHERE condition<BR/>5: Table does not exist or has no nametab entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SELECT_TAW_A','es','CL_CI_TEST_SELECT_TAW_A');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SELECT_TAW_A','fr','In the case of accesses to <B>unbuffered</B> tables, this check examines the WHERE condition of the SELECT statement according to the criteria listed below.<BR/>1: SELECT statement contains no WHERE condition<BR/>2: WHERE condition contains no field of a table index<BR/>3: WHERE condition contains no first field of a table index<BR/>4: Despite CLIENT SPECIFIED addition, no client field in the WHERE condition<BR/>5: Table does not exist or has no nametab entry');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','compl','CL_CI_TEST_IMUD_TAW_A','en','The priority of a message depends on the size category of the table that is accessed.<BR/>Note: The Code Inspector can currently only correctly analyze WHERE conditions in normal form.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','compl','CL_CI_TEST_IMUD_TAW_A','fr','The priority of a message depends on the size category of the table that is accessed.<BR/>Note: The Code Inspector can currently only correctly analyze WHERE conditions in normal form.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_IMUD_TAW_A','en','Analysis of WHERE Condition for UPDATE and DELETE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_IMUD_TAW_A','es','CL_CI_TEST_IMUD_TAW_A');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_IMUD_TAW_A','fr','Analysis of WHERE Condition for UPDATE and DELETE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_IMUD_TAW_A','en','Examines the WHERE condition in the UPDATE and DELETE statements UPDATE dbtab SET ... WHERE and DELETE FROM dbtab WHERE ...according to the criteria below.<BR/> - WHERE condition contains no field of a table index.<BR/> - WHERE condition contains no first field of a table index.<BR/> - No client field in the WHERE condition despite the CLIENT SPECIFIED addition<BR/>');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_IMUD_TAW_A','es','CL_CI_TEST_IMUD_TAW_A');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_IMUD_TAW_A','fr','Examines the WHERE condition in the UPDATE and DELETE statements UPDATE dbtab SET ... WHERE and DELETE FROM dbtab WHERE ...according to the criteria below.<BR/> - WHERE condition contains no field of a table index.<BR/> - WHERE condition contains no first field of a table index.<BR/> - No client field in the WHERE condition despite the CLIENT SPECIFIED addition<BR/>');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','compl','CL_CI_TEST_SELECT_TAW_BYBUF','en','Note: The Code Inspector can currently only correctly analyze WHERE conditions in normal form.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','compl','CL_CI_TEST_SELECT_TAW_BYBUF','fr','Note: The Code Inspector can currently only correctly analyze WHERE conditions in normal form.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SELECT_TAW_BYBUF','en','SELECT Statements that Bypass the Table Buffer');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SELECT_TAW_BYBUF','es','CL_CI_TEST_SELECT_TAW_BYBUF');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SELECT_TAW_BYBUF','fr','SELECT Statements that Bypass the Table Buffer');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SELECT_TAW_BYBUF','en','With read accesses, the SAP table buffering, that is the buffering of database tables on the application server, has a major performance advantage over database accesses. Therefore suitable tables should be buffered, and with buffered tables you should avoid bypassing the buffer. ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SELECT_TAW_BYBUF','es','CL_CI_TEST_SELECT_TAW_BYBUF');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SELECT_TAW_BYBUF','fr','With read accesses, the SAP table buffering, that is the buffering of database tables on the application server, has a major performance advantage over database accesses. Therefore suitable tables should be buffered, and with buffered tables you should avoid bypassing the buffer. ');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SELECT_THEN_CHECK','en','SELECT Statement with Subsequent CHECK');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SELECT_THEN_CHECK','es','CL_CI_TEST_SELECT_THEN_CHECK');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SELECT_THEN_CHECK','fr','SELECT Statement with Subsequent CHECK');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SELECT_THEN_CHECK','en','Searches for CHECK  statements that directly follow a SELECT  statement.<BR/>All selection conditions should be specified in the WHERE clause.<BR/>Do not select data and then resort it using CHECK.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SELECT_THEN_CHECK','es','CL_CI_TEST_SELECT_THEN_CHECK');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SELECT_THEN_CHECK','fr','Searches for CHECK  statements that directly follow a SELECT  statement.<BR/>All selection conditions should be specified in the WHERE clause.<BR/>Do not select data and then resort it using CHECK.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SELECT_NESTED','en','SELECT s in Loops');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SELECT_NESTED','es','CL_CI_TEST_SELECT_NESTED');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SELECT_NESTED','fr','SELECT s in Loops');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SELECT_NESTED','en','Searches for SELECT statements that are contained in loops.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SELECT_NESTED','es','CL_CI_TEST_SELECT_NESTED');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SELECT_NESTED','fr','Searches for SELECT statements that are contained in loops.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_IMUD_NESTED','en','Changing Database Accesses in Loops');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_IMUD_NESTED','es','CL_CI_TEST_IMUD_NESTED');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_IMUD_NESTED','fr','Changing Database Accesses in Loops');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_IMUD_NESTED','en','Searches for INSERT, UPDATE, MODIFY, DELETE  statements that are contained in loops.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_IMUD_NESTED','es','CL_CI_TEST_IMUD_NESTED');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_IMUD_NESTED','fr','Searches for INSERT, UPDATE, MODIFY, DELETE  statements that are contained in loops.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SCAN_NESTED','en','Nested Loops');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SCAN_NESTED','es','CL_CI_TEST_SCAN_NESTED');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SCAN_NESTED','fr','Nested Loops');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SCAN_NESTED','en','Searches for loops that are in turn nested within other loops.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SCAN_NESTED','es','CL_CI_TEST_SCAN_NESTED');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SCAN_NESTED','fr','Searches for loops that are in turn nested within other loops.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_DDIC_TABLES','en','Table Attribute Check');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_DDIC_TABLES','es','CL_CI_TEST_DDIC_TABLES');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_DDIC_TABLES','fr','Table Attribute Check');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_DDIC_TABLES','en','Checks the technical settings (transport attributes, buffering) and the secondary indices of database tables.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_DDIC_TABLES','es','CL_CI_TEST_DDIC_TABLES');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_DDIC_TABLES','fr','Checks the technical settings (transport attributes, buffering) and the secondary indices of database tables.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_CRITICAL_STATEMENTS','en','Critical Statements use');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_CRITICAL_STATEMENTS','es','CL_CI_TEST_CRITICAL_STATEMENTS');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_CRITICAL_STATEMENTS','fr','Critical Statements use');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_CRITICAL_STATEMENTS','en','The test checks whether certain statements that are critical to security or endanger program stabiltiy are used.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_CRITICAL_STATEMENTS','es','CL_CI_TEST_CRITICAL_STATEMENTS');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_CRITICAL_STATEMENTS','fr','The test checks whether certain statements that are critical to security or endanger program stabiltiy are used.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SELECT_TAW_SEC01','en','Dynamic and Client-Specific Accesses in SELECT');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SELECT_TAW_SEC01','es','CL_CI_TEST_SELECT_TAW_SEC01');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SELECT_TAW_SEC01','fr','Dynamic and Client-Specific Accesses in SELECT');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SELECT_TAW_SEC01','en','The check examines whether any security-relevant read accesses were made to database tables using SELECT or  OPEN CURSOR [WITH HOLD] c FOR SELECT ...');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SELECT_TAW_SEC01','es','CL_CI_TEST_SELECT_TAW_SEC01');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SELECT_TAW_SEC01','fr','The check examines whether any security-relevant read accesses were made to database tables using SELECT or  OPEN CURSOR [WITH HOLD] c FOR SELECT ...');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_IMUD_TAW_SEC01','en','Dynamic and Client-Specific Accesses Using INSERT, UPDATE, MODIFY, DELETE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_IMUD_TAW_SEC01','es','CL_CI_TEST_IMUD_TAW_SEC01');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_IMUD_TAW_SEC01','fr','Dynamic and Client-Specific Accesses Using INSERT, UPDATE, MODIFY, DELETE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_IMUD_TAW_SEC01','en','The check examines whether any security-relevant changing accesses were made to database tables using INSERT, UPDATE, MODIFY,  or DELETE.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_IMUD_TAW_SEC01','es','CL_CI_TEST_IMUD_TAW_SEC01');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_IMUD_TAW_SEC01','fr','The check examines whether any security-relevant changing accesses were made to database tables using INSERT, UPDATE, MODIFY,  or DELETE.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SYSUBRC','en','Handling SY-SUBRC');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SYSUBRC','es','CL_CI_TEST_SYSUBRC');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_SYSUBRC','fr','Handling SY-SUBRC');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SYSUBRC','en','The check examines whether the return value SY-SUBRC is handled after certain language elements.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SYSUBRC','es','CL_CI_TEST_SYSUBRC');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_SYSUBRC','fr','The check examines whether the return value SY-SUBRC is handled after certain language elements.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_IMUD_NOT_VB','en','Changing Database Accesses Outside Update Modules');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_IMUD_NOT_VB','es','CL_CI_TEST_IMUD_NOT_VB');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TEST_IMUD_NOT_VB','fr','Changing Database Accesses Outside Update Modules');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_IMUD_NOT_VB','en','Searches for INSERT, UPDATE, MODIFY, DELETE  statements that are used outside update function modules.<BR/>Within a transaction, changing database accesses should be executed in update modules.');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_IMUD_NOT_VB','es','CL_CI_TEST_IMUD_NOT_VB');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','desc','CL_CI_TEST_IMUD_NOT_VB','fr','Searches for INSERT, UPDATE, MODIFY, DELETE  statements that are used outside update function modules.<BR/>Within a transaction, changing database accesses should be executed in update modules.');

INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_AUT','en','Authorizations');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_BRE','en','Superfluous Statements');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_CAL','en','CALL FUNCTION interfaces');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_CON','en','Conversions');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_DAT','en','Field attributes');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_DYC','en','Screen consistency');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_ESY','en','Test Environment');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_GES','en','SET/GET parameter Ids');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_LOA','en','Check load sizes');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_MES','en','MESSAGE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_MLS','en','Multilingual capability');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_NOC','en','Hidden errors and warnings');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_OPF','en','Output CURR/QUAN fields');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_PAC','en','Package Checks');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_PER','en','PERFORM/FORM interface');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_PFS','en','GUI Status and TITLEBAR');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_POR','en','Portability test ASCII/EBCDIC');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_STE','en','Structure Enhancements');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_SUB','en','External program interfaces');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TXT','en','Character strings');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_UNR','en','Problematic Statements');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_WRN','en','Syntax check warnings');

INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_AUT','fr','Authorizations');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_BRE','fr','Superfluous Statements');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_CAL','fr','CALL FUNCTION interfaces');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_CON','fr','Conversions');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_DAT','fr','Field attributes');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_DYC','fr','Screen consistency');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_ESY','fr','Test Environment');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_GES','fr','SET/GET parameter Ids');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_LOA','fr','Check load sizes');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_MES','fr','MESSAGE');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_MLS','fr','Multilingual capability');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_NOC','fr','Hidden errors and warnings');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_OPF','fr','Output CURR/QUAN fields');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_PAC','fr','Package Checks');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_PER','fr','PERFORM/FORM interface');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_PFS','fr','GUI Status and TITLEBAR');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_POR','fr','Portability test ASCII/EBCDIC');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_STE','fr','Structure Enhancements');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_SUB','fr','External program interfaces');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_TXT','fr','Character strings');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_UNR','fr','Problematic Statements');
INSERT INTO i18n (TABLE_NAME,COLUMN_NAME,ID_TABLE,ID_LANGUE,TEXT) VALUES ('critere','lib','CL_CI_WRN','fr','Syntax check warnings');
                                                                                           
