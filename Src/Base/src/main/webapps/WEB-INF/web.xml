<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:ws="http://jax-ws.dev.java.net/spring/core" xmlns:wss="http://jax-ws.dev.java.net/spring/servlet">
    <display-name>Compuware Application Quality Solution portal</display-name>
    <!--
          - Location of the XML file that defines the root application context
          - Applied by ContextLoaderListener.
          -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:caqsContext-security.xml
            classpath:caqsContext-common-business.xml
        </param-value>
    </context-param>
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--
          - Loads the root application context of this web app at startup.
          - The application context is then available via
          - WebApplicationContextUtils.getWebApplicationContext(servletContext).
    -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!--<listener>
        <listener-class>org.springframework.security.ui.session.HttpSessionEventPublisher</listener-class>
    </listener>-->
    <filter>
        <filter-name>CharsetFilter</filter-name>
        <filter-class>com.compuware.caqs.presentation.filter.CharsetFilter</filter-class>
        <init-param>
            <param-name>requestEncoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>CharsetFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!--Servlet Filter that handles site authorization.-->
    <filter>
        <filter-name>AuthorizationFilter</filter-name>
        <description>This Filter authorizes user access to application components based upon request URI.</description>
        <filter-class>com.compuware.caqs.security.auth.AuthorizationFilter</filter-class>
        <init-param>
            <param-name>timeoutpage</param-name>
            <param-value>sessiontimedout.jsp</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>AuthorizationFilter</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <!-- invoker Servlet Configuration
      defined here explicitly as it is disabled by default for Tomcat 5
    <servlet>
        <servlet-name>invoker2</servlet-name>
        <servlet-class>
          org.apache.catalina.servlets.InvokerServlet
        </servlet-class>
        <init-param>
            <param-name>debug</param-name>
            <param-value>0</param-value>
        </init-param>
        <load-on-startup>2</load-on-startup>
    </servlet>
        -->
    <!--<listener>
        <listener-class>com.sun.xml.ws.transport.http.servlet.WSServletContextListener</listener-class>
    </listener>-->
    <servlet>
        <servlet-name>imagecreator</servlet-name>
        <servlet-class>com.compuware.caqs.presentation.common.servlets.TextImageCreatorServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>message</servlet-name>
        <servlet-class>com.compuware.caqs.presentation.messages.servlets.MessageServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>baseline</servlet-name>
        <servlet-class>com.compuware.caqs.presentation.process.servlets.BaselineServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>analysestatique</servlet-name>
        <servlet-class>com.compuware.caqs.presentation.process.servlets.AnalyseStatiqueServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>calcul</servlet-name>
        <servlet-class>com.compuware.caqs.presentation.process.servlets.CalculServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>sourcemanager</servlet-name>
        <servlet-class>com.compuware.caqs.presentation.process.servlets.SourceManagerServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>managetasks</servlet-name>
        <servlet-class>com.compuware.caqs.presentation.admin.servlets.ManageTasksServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>displaychart</servlet-name>
        <servlet-class>org.jfree.chart.servlet.DisplayChart</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>verticalheader</servlet-name>
        <servlet-class>com.compuware.caqs.presentation.common.servlets.VerticalHeaderServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>export</servlet-name>
        <servlet-class>com.compuware.caqs.presentation.process.servlets.ExportServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>import</servlet-name>
        <servlet-class>com.compuware.caqs.presentation.process.servlets.ImportServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>report</servlet-name>
        <servlet-class>com.compuware.caqs.presentation.report.servlets.ReportServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>architecture</servlet-name>
        <servlet-class>com.compuware.caqs.presentation.architecture.servlets.ArchitectureServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>projectanalysislaunch</servlet-name>
        <servlet-class>com.compuware.caqs.presentation.process.servlets.ProjectAnalysisLaunchAnalyseServlet</servlet-class>
    </servlet>
    <!-- Action Servlet Configuration -->
    <servlet>
        <servlet-name>action</servlet-name>
        <!-- we use our own (slightly) customized version of default org.apache.struts.action.ActionServlet -->
        <servlet-class>com.compuware.caqs.presentation.common.actions.ActionServlet</servlet-class>
        <init-param>
            <param-name>config</param-name>
            <param-value>/WEB-INF/struts-config.xml</param-value>
        </init-param>
        <init-param>
            <param-name>debug</param-name>
            <param-value>2</param-value>
        </init-param>
        <init-param>
            <param-name>detail</param-name>
            <param-value>2</param-value>
        </init-param>
        <init-param>
            <param-name>validate</param-name>
            <param-value>true</param-value>
        </init-param>
        <!--
                <init-param>
          <param-name>application</param-name>
                  <param-value>com.compuware.caqs.Resources.resources</param-value>
                </init-param>
                -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!-- Action Servlet Mapping -->
    <!-- cxf -->
    <!--<servlet>
        <servlet-name>CXFServlet</servlet-name>
        <servlet-class>
            org.apache.cxf.transport.servlet.CXFServlet
        </servlet-class>
    </servlet>
    <servlet>
        <servlet-name>LoginWS</servlet-name>
        <servlet-class>com.sun.xml.ws.transport.http.servlet.WSServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet>
        <servlet-name>ProjectInfosWS</servlet-name>
        <servlet-class>com.sun.xml.ws.transport.http.servlet.WSServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet>
        <servlet-name>ProjectsListForUserWS</servlet-name>
        <servlet-class>com.sun.xml.ws.transport.http.servlet.WSServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>CXFServlet</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>-->
    <!-- fin cxf -->
    <servlet-mapping>
        <servlet-name>action</servlet-name>
        <url-pattern>*.do</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>imagecreator</servlet-name>
        <url-pattern>/l</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>message</servlet-name>
        <url-pattern>/message</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>baseline</servlet-name>
        <url-pattern>/baseline</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>analysestatique</servlet-name>
        <url-pattern>/analysestatique</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>calcul</servlet-name>
        <url-pattern>/calcul</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>sourcemanager</servlet-name>
        <url-pattern>/sourcemanager</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>managetasks</servlet-name>
        <url-pattern>/managetasks</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>displaychart</servlet-name>
        <url-pattern>/displaychart</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>verticalheader</servlet-name>
        <url-pattern>/verticalheader</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>export</servlet-name>
        <url-pattern>/export</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>import</servlet-name>
        <url-pattern>/import</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>report</servlet-name>
        <url-pattern>/report</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>architecture</servlet-name>
        <url-pattern>/architecture</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>projectanalysislaunch</servlet-name>
        <url-pattern>/projectanalysislaunch</url-pattern>
    </servlet-mapping>
    <!--<servlet-mapping>
        <servlet-name>LoginWS</servlet-name>
        <url-pattern>/LoginWS</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ProjectInfosWS</servlet-name>
        <url-pattern>/ProjectInfosWS</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ProjectsListForUserWS</servlet-name>
        <url-pattern>/ProjectsListForUserWS</url-pattern>
    </servlet-mapping>-->
    <session-config>
        <session-timeout>10</session-timeout>
    </session-config>
    <welcome-file-list>
        <welcome-file>/login.jsp</welcome-file>
    </welcome-file-list>
    <error-page>
        <exception-type>java.lang.Exception</exception-type>
        <location>/errorPage.jsp</location>
    </error-page>
    <taglib>
        <taglib-uri>/struts-logic.tld</taglib-uri>
        <taglib-location>/WEB-INF/struts-logic.tld</taglib-location>
    </taglib>
    <taglib>
        <taglib-uri>/struts-bean.tld</taglib-uri>
        <taglib-location>/WEB-INF/struts-bean.tld</taglib-location>
    </taglib>
    <taglib>
        <taglib-uri>/struts-html.tld</taglib-uri>
        <taglib-location>/WEB-INF/struts-html.tld</taglib-location>
    </taglib>
    <taglib>
        <taglib-uri>/struts-nested.tld</taglib-uri>
        <taglib-location>/WEB-INF/struts-nested.tld</taglib-location>
    </taglib>
    <resource-ref>
        <description>Oracle Datasource example</description>
        <res-ref-name>jdbc/PqlDS</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>
</web-app>
