/* Generated By:JavaCC: Do not edit this line. UnifaceParserConstants.java */
package com.compuware.uniface.netbeans.jcclexer;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface UnifaceParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int WHITESPACE = 1;
  /** RegularExpression Id. */
  int BR = 2;
  /** RegularExpression Id. */
  int COMMA = 3;
  /** RegularExpression Id. */
  int COLON = 4;
  /** RegularExpression Id. */
  int SEMICOLON = 5;
  /** RegularExpression Id. */
  int DOLLAR = 6;
  /** RegularExpression Id. */
  int LPAREN = 7;
  /** RegularExpression Id. */
  int RPAREN = 8;
  /** RegularExpression Id. */
  int LBRACKET = 9;
  /** RegularExpression Id. */
  int RBRACKET = 10;
  /** RegularExpression Id. */
  int AT = 11;
  /** RegularExpression Id. */
  int MULTIPLY = 12;
  /** RegularExpression Id. */
  int DIVIDE = 13;
  /** RegularExpression Id. */
  int MODULO = 14;
  /** RegularExpression Id. */
  int PLUS = 15;
  /** RegularExpression Id. */
  int MINUS = 16;
  /** RegularExpression Id. */
  int EQUAL = 17;
  /** RegularExpression Id. */
  int LT = 18;
  /** RegularExpression Id. */
  int GT = 19;
  /** RegularExpression Id. */
  int EQ = 20;
  /** RegularExpression Id. */
  int LE = 21;
  /** RegularExpression Id. */
  int GE = 22;
  /** RegularExpression Id. */
  int NE = 23;
  /** RegularExpression Id. */
  int PLUSASSIGN = 24;
  /** RegularExpression Id. */
  int MINUSASSIGN = 25;
  /** RegularExpression Id. */
  int STARASSIGN = 26;
  /** RegularExpression Id. */
  int SLASHASSIGN = 27;
  /** RegularExpression Id. */
  int REMASSIGN = 28;
  /** RegularExpression Id. */
  int NOT = 29;
  /** RegularExpression Id. */
  int OR = 30;
  /** RegularExpression Id. */
  int AND = 31;
  /** RegularExpression Id. */
  int COMMENT = 32;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 33;
  /** RegularExpression Id. */
  int DECIMAL_LITERAL = 34;
  /** RegularExpression Id. */
  int HEX_LITERAL = 35;
  /** RegularExpression Id. */
  int OCTAL_LITERAL = 36;
  /** RegularExpression Id. */
  int FLOATING_POINT_LITERAL = 37;
  /** RegularExpression Id. */
  int DECIMAL_FLOATING_POINT_LITERAL = 38;
  /** RegularExpression Id. */
  int DECIMAL_EXPONENT = 39;
  /** RegularExpression Id. */
  int HEXADECIMAL_FLOATING_POINT_LITERAL = 40;
  /** RegularExpression Id. */
  int HEXADECIMAL_EXPONENT = 41;
  /** RegularExpression Id. */
  int SYNTAX_STRING_LITERAL = 42;
  /** RegularExpression Id. */
  int STRING_LITERAL = 43;
  /** RegularExpression Id. */
  int PARAMS = 44;
  /** RegularExpression Id. */
  int ENDPARAMS = 45;
  /** RegularExpression Id. */
  int VARIABLES = 46;
  /** RegularExpression Id. */
  int ENDVARIABLES = 47;
  /** RegularExpression Id. */
  int IF = 48;
  /** RegularExpression Id. */
  int ELSEIF = 49;
  /** RegularExpression Id. */
  int ELSE = 50;
  /** RegularExpression Id. */
  int ENDIF = 51;
  /** RegularExpression Id. */
  int WHILE = 52;
  /** RegularExpression Id. */
  int ENDWHILE = 53;
  /** RegularExpression Id. */
  int REPEAT = 54;
  /** RegularExpression Id. */
  int UNTIL = 55;
  /** RegularExpression Id. */
  int SELECTCASE = 56;
  /** RegularExpression Id. */
  int CASE = 57;
  /** RegularExpression Id. */
  int ELSECASE = 58;
  /** RegularExpression Id. */
  int ENDSELECTCASE = 59;
  /** RegularExpression Id. */
  int BOOLEAN = 60;
  /** RegularExpression Id. */
  int DATE = 61;
  /** RegularExpression Id. */
  int DATETIME = 62;
  /** RegularExpression Id. */
  int FLOAT = 63;
  /** RegularExpression Id. */
  int HANDLE = 64;
  /** RegularExpression Id. */
  int IMAGE = 65;
  /** RegularExpression Id. */
  int LINEARDATE = 66;
  /** RegularExpression Id. */
  int LINEARDATETIME = 67;
  /** RegularExpression Id. */
  int LINEARTIME = 68;
  /** RegularExpression Id. */
  int NUMERIC = 69;
  /** RegularExpression Id. */
  int RAW = 70;
  /** RegularExpression Id. */
  int STRING = 71;
  /** RegularExpression Id. */
  int TIME = 72;
  /** RegularExpression Id. */
  int ANY = 73;
  /** RegularExpression Id. */
  int ENTITY = 74;
  /** RegularExpression Id. */
  int OCCURRENCE = 75;
  /** RegularExpression Id. */
  int XMLSTREAM = 76;
  /** RegularExpression Id. */
  int FUNCTION = 77;
  /** RegularExpression Id. */
  int DELETEINSTANCE = 78;
  /** RegularExpression Id. */
  int NEWINSTANCE = 79;
  /** RegularExpression Id. */
  int SETFORMFOCUS = 80;
  /** RegularExpression Id. */
  int ENTITYCOPY = 81;
  /** RegularExpression Id. */
  int ADDMONTHS = 82;
  /** RegularExpression Id. */
  int COMPARE = 83;
  /** RegularExpression Id. */
  int DISPLAYLENGTH = 84;
  /** RegularExpression Id. */
  int LENGTH = 85;
  /** RegularExpression Id. */
  int LOWERCASE = 86;
  /** RegularExpression Id. */
  int RESET = 87;
  /** RegularExpression Id. */
  int SCAN = 88;
  /** RegularExpression Id. */
  int SET = 89;
  /** RegularExpression Id. */
  int STRIPATTRIBUTES = 90;
  /** RegularExpression Id. */
  int UPPERCASE = 91;
  /** RegularExpression Id. */
  int CLOSE = 92;
  /** RegularExpression Id. */
  int COMMIT = 93;
  /** RegularExpression Id. */
  int OPEN = 94;
  /** RegularExpression Id. */
  int ROLLBACK = 95;
  /** RegularExpression Id. */
  int SQL = 96;
  /** RegularExpression Id. */
  int ACTIVATE = 97;
  /** RegularExpression Id. */
  int APEXIT = 98;
  /** RegularExpression Id. */
  int APSTART = 99;
  /** RegularExpression Id. */
  int BREAK = 100;
  /** RegularExpression Id. */
  int DISPLAY = 101;
  /** RegularExpression Id. */
  int DONE = 102;
  /** RegularExpression Id. */
  int EDIT = 103;
  /** RegularExpression Id. */
  int EXIT = 104;
  /** RegularExpression Id. */
  int GOTO = 105;
  /** RegularExpression Id. */
  int MACRO = 106;
  /** RegularExpression Id. */
  int PERFORM = 107;
  /** RegularExpression Id. */
  int PULLDOWN = 108;
  /** RegularExpression Id. */
  int RETURN = 109;
  /** RegularExpression Id. */
  int RUN = 110;
  /** RegularExpression Id. */
  int SPAWN = 111;
  /** RegularExpression Id. */
  int IN = 112;
  /** RegularExpression Id. */
  int OUT = 113;
  /** RegularExpression Id. */
  int INOUT = 114;
  /** RegularExpression Id. */
  int SYNC_SWITCH = 115;
  /** RegularExpression Id. */
  int ASYNC_SWITCH = 116;
  /** RegularExpression Id. */
  int ATTACHED_SWITCH = 117;
  /** RegularExpression Id. */
  int PREVIOUS_SWITCH = 118;
  /** RegularExpression Id. */
  int NEXT_SWITCH = 119;
  /** RegularExpression Id. */
  int PRINT_SWITCH = 120;
  /** RegularExpression Id. */
  int FROM = 121;
  /** RegularExpression Id. */
  int IDENTIFIER = 122;
  /** RegularExpression Id. */
  int LETTER = 123;
  /** RegularExpression Id. */
  int DIGIT = 124;
  /** RegularExpression Id. */
  int UNDERSCORE = 125;
  /** RegularExpression Id. */
  int DOT = 126;
  /** RegularExpression Id. */
  int REGISTER = 127;
  /** RegularExpression Id. */
  int GLOBALVARIABLE = 128;
  /** RegularExpression Id. */
  int COMPONENTVARIABLE = 129;
  /** RegularExpression Id. */
  int CMPSTATEMANAGEDBY = 130;
  /** RegularExpression Id. */
  int COMPONENTNAME = 131;
  /** RegularExpression Id. */
  int COMPONENTTYPE = 132;
  /** RegularExpression Id. */
  int ENTNAME = 133;
  /** RegularExpression Id. */
  int FIELDNAME = 134;
  /** RegularExpression Id. */
  int LIBRARYNAME = 135;
  /** RegularExpression Id. */
  int MODELNAME = 136;
  /** RegularExpression Id. */
  int TABLENAME = 137;
  /** RegularExpression Id. */
  int TRIGGERABBR = 138;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<WHITESPACE>",
    "<BR>",
    "\",\"",
    "\":\"",
    "\";\"",
    "\"$\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"@\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"+\"",
    "\"-\"",
    "\"=\"",
    "\"<\"",
    "\">\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"%=\"",
    "\"!\"",
    "\"|\"",
    "\"&\"",
    "<COMMENT>",
    "<INTEGER_LITERAL>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<OCTAL_LITERAL>",
    "<FLOATING_POINT_LITERAL>",
    "<DECIMAL_FLOATING_POINT_LITERAL>",
    "<DECIMAL_EXPONENT>",
    "<HEXADECIMAL_FLOATING_POINT_LITERAL>",
    "<HEXADECIMAL_EXPONENT>",
    "<SYNTAX_STRING_LITERAL>",
    "<STRING_LITERAL>",
    "\"params\"",
    "\"endparams\"",
    "\"variables\"",
    "\"endvariables\"",
    "\"if\"",
    "\"elseif\"",
    "\"else\"",
    "\"endif\"",
    "\"while\"",
    "\"endwhile\"",
    "\"repeat\"",
    "\"until\"",
    "\"selectcase\"",
    "\"case\"",
    "\"elsecase\"",
    "\"endselectcase\"",
    "\"boolean\"",
    "\"date\"",
    "\"datetime\"",
    "\"float\"",
    "\"handle\"",
    "\"image\"",
    "\"lineardate\"",
    "\"lineardatetime\"",
    "\"lineartime\"",
    "\"numeric\"",
    "\"raw\"",
    "\"string\"",
    "\"time\"",
    "\"any\"",
    "\"entity\"",
    "\"occurrence\"",
    "\"xmlstream\"",
    "<FUNCTION>",
    "\"deleteinstance\"",
    "\"newinstance\"",
    "\"setformfocus\"",
    "\"entitycopy\"",
    "\"addmonths\"",
    "\"compare\"",
    "\"displaylength\"",
    "\"length\"",
    "\"lowercase\"",
    "\"reset\"",
    "\"scan\"",
    "\"set\"",
    "\"stripattributes\"",
    "\"uppercase\"",
    "\"close\"",
    "\"commit\"",
    "\"open\"",
    "\"rollback\"",
    "\"sql\"",
    "\"activate\"",
    "\"apexit\"",
    "\"apstart\"",
    "\"break\"",
    "\"display\"",
    "\"done\"",
    "\"edit\"",
    "\"exit\"",
    "\"goto\"",
    "\"macro\"",
    "\"perform\"",
    "\"pulldown\"",
    "\"return\"",
    "\"run\"",
    "\"spawn\"",
    "\"in\"",
    "\"out\"",
    "\"inout\"",
    "\"/sync\"",
    "\"/async\"",
    "\"/attached\"",
    "\"/previous\"",
    "\"/next\"",
    "\"/print\"",
    "\"from\"",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\"_\"",
    "\".\"",
    "<REGISTER>",
    "<GLOBALVARIABLE>",
    "<COMPONENTVARIABLE>",
    "\"<$cmpStateManagedBy>\"",
    "\"<$componentName>\"",
    "\"<$componentType>\"",
    "\"<$entName>\"",
    "\"<$fieldName>\"",
    "\"<$libraryName>\"",
    "\"<$modelName>\"",
    "\"<$tableName>\"",
    "\"<$triggerAbbr>\"",
  };

}
