
package com.compuware.caqs.webservices.login;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import org.eclipse.jface.preference.IPreferenceStore;

import com.compuware.caqs.eclipseplugin.preferences.PreferenceConstants;
import com.compuware.caqs.plugin.Activator;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2-hudson-752-
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "LoginWS", targetNamespace = "http://impl.webservices.caqs.compuware.com/")
public class LoginWS
    extends Service
{

    private final static URL LOGINWS_WSDL_LOCATION;
    private final static WebServiceException LOGINWS_EXCEPTION;
    private final static QName LOGINWS_QNAME = new QName("http://impl.webservices.caqs.compuware.com/", "LoginWS");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
        	IPreferenceStore store = Activator.getDefault().getPreferenceStore();
    		String urlHost = store.getString(PreferenceConstants.P_CAQS_URL);
            url = new URL(urlHost+"/caqs/services/LoginWS?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        LOGINWS_WSDL_LOCATION = url;
        LOGINWS_EXCEPTION = e;
    }

    public LoginWS() {
        super(__getWsdlLocation(), LOGINWS_QNAME);
    }

    public LoginWS(URL wsdlLocation) {
        super(wsdlLocation, LOGINWS_QNAME);
    }

    public LoginWS(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    /**
     * 
     * @return
     *     returns LoginWSImpl
     */
    @WebEndpoint(name = "LoginWSImplPort")
    public LoginWSImpl getLoginWSImplPort() {
        return super.getPort(new QName("http://impl.webservices.caqs.compuware.com/", "LoginWSImplPort"), LoginWSImpl.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LoginWSImpl
     */
    @WebEndpoint(name = "LoginWSImplPort")
    public LoginWSImpl getLoginWSImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://impl.webservices.caqs.compuware.com/", "LoginWSImplPort"), LoginWSImpl.class, features);
    }

    private static URL __getWsdlLocation() {
        if (LOGINWS_EXCEPTION!= null) {
            throw LOGINWS_EXCEPTION;
        }
        return LOGINWS_WSDL_LOCATION;
    }

}
